package dms.konkuk.autosar.ct.codegen;



//package org.eclipse.emf.codegen.ecore.templates.model;
import java.util.*;

import org.eclipse.emf.codegen.ecore.genmodel.*;
import org.eclipse.emf.codegen.util.ImportManager;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClassifier;


//import autosar.ct.eeprom.IMTC.Std_VersioninfoType;

public class JAVATemplates
{
	protected static String nl;
	public static synchronized JAVATemplates create(String lineSeparator)
	{
		nl = lineSeparator;
		JAVATemplates result = new JAVATemplates();
		nl = null;
		return result;
	}

	public final String NL = nl == null ? (System.getProperties().getProperty("line.separator")) : nl;
	protected final String TEXT_1 = "";
	protected final String TEXT_2 = "/**";
	protected final String TEXT_3 = NL + " * ";
	protected final String TEXT_4 = NL + " * <copyright>" + NL + " * </copyright>";
	protected final String TEXT_5 = NL + " *" + NL + " * ";
	protected final String TEXT_6 = "Id";
	protected final String TEXT_7 = NL + " */";
	protected final String TEXT_8 = NL + "package ";
	protected final String TEXT_9 = ";";
	protected final String TEXT_10 = NL + "package ";
	protected final String TEXT_11 = ";";
	protected final String TEXT_12 = NL;
	protected final String TEXT_13 = NL;
	protected final String TEXT_14 = NL + "/**" + NL + " * <!-- begin-user-doc -->" + NL + " * A representation of the model object '<em><b>";
	protected final String TEXT_15 = "</b></em>'." + NL + " * <!-- end-user-doc -->";
	protected final String TEXT_16 = NL + " *" + NL + " * <!-- begin-model-doc -->" + NL + " * ";
	protected final String TEXT_17 = NL + " * <!-- end-model-doc -->";
	protected final String TEXT_18 = NL + " *";
	protected final String TEXT_19 = NL + " * <p>" + NL + " * The following features are supported:" + NL + " * <ul>";
	protected final String TEXT_20 = NL + " *   <li>{@link ";
	protected final String TEXT_21 = "#";
	protected final String TEXT_22 = " <em>";
	protected final String TEXT_23 = "</em>}</li>";
	protected final String TEXT_24 = NL + " * </ul>" + NL + " * </p>";
	protected final String TEXT_25 = NL + " *";
	protected final String TEXT_26 = NL + " * @see ";
	protected final String TEXT_27 = "#get";
	protected final String TEXT_28 = "()";
	protected final String TEXT_29 = NL + " * @model ";
	protected final String TEXT_30 = NL + " *        ";
	protected final String TEXT_31 = NL + " * @model";
	protected final String TEXT_32 = NL + " * @extends ";
	protected final String TEXT_33 = NL + " * @generated" + NL + " */";
	protected final String TEXT_34 = NL + "/**" + NL + " * <!-- begin-user-doc -->" + NL + " * An implementation of the model object '<em><b>";
	protected final String TEXT_35 = "</b></em>'." + NL + " * <!-- end-user-doc -->" + NL + " * <p>";
	protected final String TEXT_36 = NL + " * The following features are implemented:" + NL + " * <ul>";
	protected final String TEXT_37 = NL + " *   <li>{@link ";
	protected final String TEXT_38 = "#";
	protected final String TEXT_39 = " <em>";
	protected final String TEXT_40 = "</em>}</li>";
	protected final String TEXT_41 = NL + " * </ul>";
	protected final String TEXT_42 = NL + " * </p>" + NL + " *" + NL + " * @generated" + NL + " */";
	protected final String TEXT_43 = NL + "public";
	protected final String TEXT_44 = " abstract";
	protected final String TEXT_45 = " class ";
	protected final String TEXT_46 = NL + "public interface ";
	protected final String TEXT_47 = NL + "{";
	protected final String TEXT_48 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\t";
	protected final String TEXT_49 = " copyright = ";
	protected final String TEXT_50 = ";";
	protected final String TEXT_51 = NL;
	protected final String TEXT_52 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic static final ";
	protected final String TEXT_53 = " mofDriverNumber = \"";
	protected final String TEXT_54 = "\";";
	protected final String TEXT_55 = NL;
	protected final String TEXT_56 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprivate static final long serialVersionUID = 1L;" + NL;
	protected final String TEXT_57 = NL + "\t/**" + NL + "\t * An array of objects representing the values of non-primitive features." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprotected Object[] ";
	protected final String TEXT_58 = ";" + NL;
	protected final String TEXT_59 = NL + "\t/**" + NL + "\t * A bit field representing the indices of non-primitive feature values." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprotected int ";
	protected final String TEXT_60 = ";" + NL;
	protected final String TEXT_61 = NL + "\t/**" + NL + "\t * A set of bit flags representing the values of boolean attributes and whether unsettable features have been set." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected int ";
	protected final String TEXT_62 = " = 0;" + NL;
	protected final String TEXT_63 = NL + "\t/**" + NL + "\t * The cached value of the '{@link #";
	protected final String TEXT_64 = "() <em>";
	protected final String TEXT_65 = "</em>}' ";
	protected final String TEXT_66 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @see #";
	protected final String TEXT_67 = "()" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected ";
	protected final String TEXT_68 = " ";
	protected final String TEXT_69 = ";" + NL;
	protected final String TEXT_70 = NL + "\t/**" + NL + "\t * The empty value for the '{@link #";
	protected final String TEXT_71 = "() <em>";
	protected final String TEXT_72 = "</em>}' array accessor." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @see #";
	protected final String TEXT_73 = "()" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */";
	protected final String TEXT_74 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_75 = NL + "\tprotected static final ";
	protected final String TEXT_76 = "[] ";
	protected final String TEXT_77 = "_EEMPTY_ARRAY = new ";
	protected final String TEXT_78 = " [0]";
	protected final String TEXT_79 = ";" + NL;
	protected final String TEXT_80 = NL + "\t/**" + NL + "\t * The default value of the '{@link #";
	protected final String TEXT_81 = "() <em>";
	protected final String TEXT_82 = "</em>}' ";
	protected final String TEXT_83 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @see #";
	protected final String TEXT_84 = "()" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */";
	protected final String TEXT_85 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_86 = NL + "\tprotected static final ";
	protected final String TEXT_87 = " ";
	protected final String TEXT_88 = "; // TODO The default value literal \"";
	protected final String TEXT_89 = "\" is not valid.";
	protected final String TEXT_90 = " = ";
	protected final String TEXT_91 = ";";
	protected final String TEXT_92 = NL;
	protected final String TEXT_93 = NL + "\t/**" + NL + "\t * An additional set of bit flags representing the values of boolean attributes and whether unsettable features have been set." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected int ";
	protected final String TEXT_94 = " = 0;" + NL;
	protected final String TEXT_95 = NL + "\t/**" + NL + "\t * The offset of the flags representing the value of the '{@link #";
	protected final String TEXT_96 = "() <em>";
	protected final String TEXT_97 = "</em>}' ";
	protected final String TEXT_98 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected static final int ";
	protected final String TEXT_99 = "_EFLAG_OFFSET = ";
	protected final String TEXT_100 = ";" + NL + "" + NL + "\t/**" + NL + "\t * The flags representing the default value of the '{@link #";
	protected final String TEXT_101 = "() <em>";
	protected final String TEXT_102 = "</em>}' ";
	protected final String TEXT_103 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected static final int ";
	protected final String TEXT_104 = "_EFLAG_DEFAULT = ";
	protected final String TEXT_105 = ".ordinal()";
	protected final String TEXT_106 = ".VALUES.indexOf(";
	protected final String TEXT_107 = ")";
	protected final String TEXT_108 = " << ";
	protected final String TEXT_109 = "_EFLAG_OFFSET;" + NL + "" + NL + "\t/**" + NL + "\t * The array of enumeration values for '{@link ";
	protected final String TEXT_110 = " ";
	protected final String TEXT_111 = "}'" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprivate static final ";
	protected final String TEXT_112 = "[] ";
	protected final String TEXT_113 = "_EFLAG_VALUES = ";
	protected final String TEXT_114 = ".values()";
	protected final String TEXT_115 = "(";
	protected final String TEXT_116 = "[])";
	protected final String TEXT_117 = ".VALUES.toArray(new ";
	protected final String TEXT_118 = "[";
	protected final String TEXT_119 = ".VALUES.size()])";
	protected final String TEXT_120 = ";" + NL;
	protected final String TEXT_121 = NL + "\t/**" + NL + "\t * The flag";
	protected final String TEXT_122 = " representing the value of the '{@link #";
	protected final String TEXT_123 = "() <em>";
	protected final String TEXT_124 = "</em>}' ";
	protected final String TEXT_125 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @see #";
	protected final String TEXT_126 = "()" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected static final int ";
	protected final String TEXT_127 = "_EFLAG = ";
	protected final String TEXT_128 = " << ";
	protected final String TEXT_129 = "_EFLAG_OFFSET";
	protected final String TEXT_130 = ";" + NL;
	protected final String TEXT_131 = NL + "\t/**" + NL + "\t * The cached value of the '{@link #";
	protected final String TEXT_132 = "() <em>";
	protected final String TEXT_133 = "</em>}' ";
	protected final String TEXT_134 = "." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @see #";
	protected final String TEXT_135 = "()" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected ";
	protected final String TEXT_136 = " ";
	protected final String TEXT_137 = " = ";
	protected final String TEXT_138 = ";" + NL;
	protected final String TEXT_139 = NL + "\t/**" + NL + "\t * An additional set of bit flags representing the values of boolean attributes and whether unsettable features have been set." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected int ";
	protected final String TEXT_140 = " = 0;" + NL;
	protected final String TEXT_141 = NL + "\t/**" + NL + "\t * The flag representing whether the ";
	protected final String TEXT_142 = " ";
	protected final String TEXT_143 = " has been set." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected static final int ";
	protected final String TEXT_144 = "_ESETFLAG = 1 << ";
	protected final String TEXT_145 = ";" + NL;
	protected final String TEXT_146 = NL + "\t/**" + NL + "\t * This is true if the ";
	protected final String TEXT_147 = " ";
	protected final String TEXT_148 = " has been set." + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t * @ordered" + NL + "\t */" + NL + "\tprotected boolean ";
	protected final String TEXT_149 = "ESet;" + NL;
	protected final String TEXT_150 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprivate static final int ";
	protected final String TEXT_151 = " = ";
	protected final String TEXT_152 = ".getFeatureID(";
	protected final String TEXT_153 = ") - ";
	protected final String TEXT_154 = ";" + NL;
	protected final String TEXT_155 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprivate static final int ";
	protected final String TEXT_156 = " = ";
	protected final String TEXT_157 = ".getFeatureID(";
	protected final String TEXT_158 = ") - ";
	protected final String TEXT_159 = ";" + NL;
	protected final String TEXT_160 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\t";
	protected final String TEXT_161 = "public";
	protected final String TEXT_162 = "protected";
	protected final String TEXT_163 = " ";
	protected final String TEXT_164 = "()" + NL + "\t{" + NL + "\t\tsuper();";
	protected final String TEXT_165 = NL + "\t\t";
	protected final String TEXT_166 = " |= ";
	protected final String TEXT_167 = "_EFLAG";
	protected final String TEXT_168 = "_DEFAULT";
	protected final String TEXT_169 = ";";
	protected final String TEXT_170 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_171 = NL + "\t@Override";
	protected final String TEXT_172 = NL + "\tprotected ";
	protected final String TEXT_173 = " eStaticClass()" + NL + "\t{" + NL + "\t\treturn ";
	protected final String TEXT_174 = ";" + NL + "\t}" + NL;
	protected final String TEXT_175 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_176 = NL + "\t@Override";
	protected final String TEXT_177 = NL + "\tprotected int eStaticFeatureCount()" + NL + "\t{" + NL + "\t\treturn ";
	protected final String TEXT_178 = ";" + NL + "\t}" + NL;
	protected final String TEXT_179 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_180 = NL + "\t";
	protected final String TEXT_181 = "[] ";
	protected final String TEXT_182 = "();" + NL;
	protected final String TEXT_183 = NL + "\tpublic ";
	protected final String TEXT_184 = "[] ";
	protected final String TEXT_185 = "()" + NL + "\t{";
	protected final String TEXT_186 = NL + "\t\t";
	protected final String TEXT_187 = " list = (";
	protected final String TEXT_188 = ")";
	protected final String TEXT_189 = "();" + NL + "\t\tif (list.isEmpty()) return ";
	protected final String TEXT_190 = "(";
	protected final String TEXT_191 = "[])";
	protected final String TEXT_192 = "_EEMPTY_ARRAY;";
	protected final String TEXT_193 = NL + "\t\tif (";
	protected final String TEXT_194 = " == null || ";
	protected final String TEXT_195 = ".isEmpty()) return ";
	protected final String TEXT_196 = "(";
	protected final String TEXT_197 = "[])";
	protected final String TEXT_198 = "_EEMPTY_ARRAY;" + NL + "\t\t";
	protected final String TEXT_199 = " list = (";
	protected final String TEXT_200 = ")";
	protected final String TEXT_201 = ";";
	protected final String TEXT_202 = NL + "\t\tlist.shrink();" + NL + "\t\treturn (";
	protected final String TEXT_203 = "[])list.data();" + NL + "\t}" + NL;
	protected final String TEXT_204 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_205 = NL + "\t";
	protected final String TEXT_206 = " get";
	protected final String TEXT_207 = "(int index);" + NL;
	protected final String TEXT_208 = NL + "\tpublic ";
	protected final String TEXT_209 = " get";
	protected final String TEXT_210 = "(int index)" + NL + "\t{" + NL + "\t\treturn ";
	protected final String TEXT_211 = "(";
	protected final String TEXT_212 = ")";
	protected final String TEXT_213 = "().get(index);" + NL + "\t}" + NL;
	protected final String TEXT_214 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_215 = NL + "\tint get";
	protected final String TEXT_216 = "Length();" + NL;
	protected final String TEXT_217 = NL + "\tpublic int get";
	protected final String TEXT_218 = "Length()" + NL + "\t{";
	protected final String TEXT_219 = NL + "\t\treturn ";
	protected final String TEXT_220 = "().size();";
	protected final String TEXT_221 = NL + "\t\treturn ";
	protected final String TEXT_222 = " == null ? 0 : ";
	protected final String TEXT_223 = ".size();";
	protected final String TEXT_224 = NL + "\t}" + NL;
	protected final String TEXT_225 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_226 = NL + "\tvoid set";
	protected final String TEXT_227 = "(";
	protected final String TEXT_228 = "[] new";
	protected final String TEXT_229 = ");" + NL;
	protected final String TEXT_230 = NL + "\tpublic void set";
	protected final String TEXT_231 = "(";
	protected final String TEXT_232 = "[] new";
	protected final String TEXT_233 = ")" + NL + "\t{" + NL + "\t\t((";
	protected final String TEXT_234 = ")";
	protected final String TEXT_235 = "()).setData(new";
	protected final String TEXT_236 = ".length, new";
	protected final String TEXT_237 = ");" + NL + "\t}" + NL;
	protected final String TEXT_238 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_239 = NL + "\tvoid set";
	protected final String TEXT_240 = "(int index, ";
	protected final String TEXT_241 = " element);" + NL;
	protected final String TEXT_242 = NL + "\tpublic void set";
	protected final String TEXT_243 = "(int index, ";
	protected final String TEXT_244 = " element)" + NL + "\t{" + NL + "\t\t";
	protected final String TEXT_245 = "().set(index, element);" + NL + "\t}" + NL;
	protected final String TEXT_246 = NL + "\t/**" + NL + "\t * Returns the value of the '<em><b>";
	protected final String TEXT_247 = "</b></em>' ";
	protected final String TEXT_248 = ".";
	protected final String TEXT_249 = NL + "\t * The key is of type ";
	protected final String TEXT_250 = "list of {@link ";
	protected final String TEXT_251 = "}";
	protected final String TEXT_252 = "{@link ";
	protected final String TEXT_253 = "}";
	protected final String TEXT_254 = "," + NL + "\t * and the value is of type ";
	protected final String TEXT_255 = "list of {@link ";
	protected final String TEXT_256 = "}";
	protected final String TEXT_257 = "{@link ";
	protected final String TEXT_258 = "}";
	protected final String TEXT_259 = ",";
	protected final String TEXT_260 = NL + "\t * The list contents are of type {@link ";
	protected final String TEXT_261 = "}";
	protected final String TEXT_262 = ".";
	protected final String TEXT_263 = NL + "\t * The default value is <code>";
	protected final String TEXT_264 = "</code>.";
	protected final String TEXT_265 = NL + "\t * The literals are from the enumeration {@link ";
	protected final String TEXT_266 = "}.";
	protected final String TEXT_267 = NL + "\t * It is bidirectional and its opposite is '{@link ";
	protected final String TEXT_268 = "#";
	protected final String TEXT_269 = " <em>";
	protected final String TEXT_270 = "</em>}'.";
	protected final String TEXT_271 = NL + "\t * <!-- begin-user-doc -->";
	protected final String TEXT_272 = NL + "\t * <p>" + NL + "\t * If the meaning of the '<em>";
	protected final String TEXT_273 = "</em>' ";
	protected final String TEXT_274 = " isn't clear," + NL + "\t * there really should be more of a description here..." + NL + "\t * </p>";
	protected final String TEXT_275 = NL + "\t * <!-- end-user-doc -->";
	protected final String TEXT_276 = NL + "\t * <!-- begin-model-doc -->" + NL + "\t * ";
	protected final String TEXT_277 = NL + "\t * <!-- end-model-doc -->";
	protected final String TEXT_278 = NL + "\t * @return the value of the '<em>";
	protected final String TEXT_279 = "</em>' ";
	protected final String TEXT_280 = ".";
	protected final String TEXT_281 = NL + "\t * @see ";
	protected final String TEXT_282 = NL + "\t * @see #isSet";
	protected final String TEXT_283 = "()";
	protected final String TEXT_284 = NL + "\t * @see #unset";
	protected final String TEXT_285 = "()";
	protected final String TEXT_286 = NL + "\t * @see #set";
	protected final String TEXT_287 = "(";
	protected final String TEXT_288 = ")";
	protected final String TEXT_289 = NL + "\t * @see ";
	protected final String TEXT_290 = "#get";
	protected final String TEXT_291 = "()";
	protected final String TEXT_292 = NL + "\t * @see ";
	protected final String TEXT_293 = "#";
	protected final String TEXT_294 = NL + "\t * @model ";
	protected final String TEXT_295 = NL + "\t *        ";
	protected final String TEXT_296 = NL + "\t * @model";
	protected final String TEXT_297 = NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_298 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_299 = NL + "\t";
	protected final String TEXT_300 = " ";
	protected final String TEXT_301 = "();" + NL;
	protected final String TEXT_302 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_303 = NL + "\tpublic ";
	protected final String TEXT_304 = " ";
	protected final String TEXT_305 = "_";
	protected final String TEXT_306 = "()" + NL + "\t{";
	protected final String TEXT_307 = NL + "\t\treturn ";
	protected final String TEXT_308 = "(";
	protected final String TEXT_309 = "(";
	protected final String TEXT_310 = ")eDynamicGet(";
	protected final String TEXT_311 = ", ";
	protected final String TEXT_312 = ", true, ";
	protected final String TEXT_313 = ")";
	protected final String TEXT_314 = ").";
	protected final String TEXT_315 = "()";
	protected final String TEXT_316 = ";";
	protected final String TEXT_317 = NL + "\t\treturn ";
	protected final String TEXT_318 = "(";
	protected final String TEXT_319 = "(";
	protected final String TEXT_320 = ")eGet(";
	protected final String TEXT_321 = ", true)";
	protected final String TEXT_322 = ").";
	protected final String TEXT_323 = "()";
	protected final String TEXT_324 = ";";
	protected final String TEXT_325 = NL + "\t\t";
	protected final String TEXT_326 = " ";
	protected final String TEXT_327 = " = (";
	protected final String TEXT_328 = ")eVirtualGet(";
	protected final String TEXT_329 = ");";
	protected final String TEXT_330 = NL + "\t\tif (";
	protected final String TEXT_331 = " == null)" + NL + "\t\t{";
	protected final String TEXT_332 = NL + "\t\t\teVirtualSet(";
	protected final String TEXT_333 = ", ";
	protected final String TEXT_334 = " = new ";
	protected final String TEXT_335 = ");";
	protected final String TEXT_336 = NL + "\t\t\t";
	protected final String TEXT_337 = " = new ";
	protected final String TEXT_338 = ";";
	protected final String TEXT_339 = NL + "\t\t}" + NL + "\t\treturn ";
	protected final String TEXT_340 = ";";
	protected final String TEXT_341 = NL + "\t\tif (eContainerFeatureID() != ";
	protected final String TEXT_342 = ") return null;" + NL + "\t\treturn (";
	protected final String TEXT_343 = ")eContainer();";
	protected final String TEXT_344 = NL + "\t\t";
	protected final String TEXT_345 = " ";
	protected final String TEXT_346 = " = (";
	protected final String TEXT_347 = ")eVirtualGet(";
	protected final String TEXT_348 = ", ";
	protected final String TEXT_349 = ");";
	protected final String TEXT_350 = NL + "\t\tif (";
	protected final String TEXT_351 = " != null && ";
	protected final String TEXT_352 = ".eIsProxy())" + NL + "\t\t{" + NL + "\t\t\t";
	protected final String TEXT_353 = " old";
	protected final String TEXT_354 = " = (";
	protected final String TEXT_355 = ")";
	protected final String TEXT_356 = ";" + NL + "\t\t\t";
	protected final String TEXT_357 = " = ";
	protected final String TEXT_358 = "eResolveProxy(old";
	protected final String TEXT_359 = ");" + NL + "\t\t\tif (";
	protected final String TEXT_360 = " != old";
	protected final String TEXT_361 = ")" + NL + "\t\t\t{";
	protected final String TEXT_362 = NL + "\t\t\t\t";
	protected final String TEXT_363 = " new";
	protected final String TEXT_364 = " = (";
	protected final String TEXT_365 = ")";
	protected final String TEXT_366 = ";";
	protected final String TEXT_367 = NL + "\t\t\t\t";
	protected final String TEXT_368 = " msgs = old";
	protected final String TEXT_369 = ".eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_370 = ", null, null);";
	protected final String TEXT_371 = NL + "\t\t\t\t";
	protected final String TEXT_372 = " msgs =  old";
	protected final String TEXT_373 = ".eInverseRemove(this, ";
	protected final String TEXT_374 = ", ";
	protected final String TEXT_375 = ".class, null);";
	protected final String TEXT_376 = NL + "\t\t\t\tif (new";
	protected final String TEXT_377 = ".eInternalContainer() == null)" + NL + "\t\t\t\t{";
	protected final String TEXT_378 = NL + "\t\t\t\t\tmsgs = new";
	protected final String TEXT_379 = ".eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_380 = ", null, msgs);";
	protected final String TEXT_381 = NL + "\t\t\t\t\tmsgs =  new";
	protected final String TEXT_382 = ".eInverseAdd(this, ";
	protected final String TEXT_383 = ", ";
	protected final String TEXT_384 = ".class, msgs);";
	protected final String TEXT_385 = NL + "\t\t\t\t}" + NL + "\t\t\t\tif (msgs != null) msgs.dispatch();";
	protected final String TEXT_386 = NL + "\t\t\t\teVirtualSet(";
	protected final String TEXT_387 = ", ";
	protected final String TEXT_388 = ");";
	protected final String TEXT_389 = NL + "\t\t\t\tif (eNotificationRequired())" + NL + "\t\t\t\t\teNotify(new ";
	protected final String TEXT_390 = "(this, ";
	protected final String TEXT_391 = ".RESOLVE, ";
	protected final String TEXT_392 = ", old";
	protected final String TEXT_393 = ", ";
	protected final String TEXT_394 = "));";
	protected final String TEXT_395 = NL + "\t\t\t}" + NL + "\t\t}";
	protected final String TEXT_396 = NL + "\t\treturn (";
	protected final String TEXT_397 = ")eVirtualGet(";
	protected final String TEXT_398 = ", ";
	protected final String TEXT_399 = ");";
	protected final String TEXT_400 = NL + "\t\treturn (";
	protected final String TEXT_401 = " & ";
	protected final String TEXT_402 = "_EFLAG) != 0;";
	protected final String TEXT_403 = NL + "\t\treturn ";
	protected final String TEXT_404 = "_EFLAG_VALUES[(";
	protected final String TEXT_405 = " & ";
	protected final String TEXT_406 = "_EFLAG) >>> ";
	protected final String TEXT_407 = "_EFLAG_OFFSET];";
	protected final String TEXT_408 = NL + "\t\treturn ";
	protected final String TEXT_409 = ";";
	protected final String TEXT_410 = NL + "\t\t";
	protected final String TEXT_411 = " ";
	protected final String TEXT_412 = " = basicGet";
	protected final String TEXT_413 = "();" + NL + "\t\treturn ";
	protected final String TEXT_414 = " != null && ";
	protected final String TEXT_415 = ".eIsProxy() ? ";
	protected final String TEXT_416 = "eResolveProxy((";
	protected final String TEXT_417 = ")";
	protected final String TEXT_418 = ") : ";
	protected final String TEXT_419 = ";";
	protected final String TEXT_420 = NL + "\t\treturn new ";
	protected final String TEXT_421 = "((";
	protected final String TEXT_422 = ".Internal)((";
	protected final String TEXT_423 = ".Internal.Wrapper)get";
	protected final String TEXT_424 = "()).featureMap().";
	protected final String TEXT_425 = "list(";
	protected final String TEXT_426 = "));";
	protected final String TEXT_427 = NL + "\t\treturn (";
	protected final String TEXT_428 = ")get";
	protected final String TEXT_429 = "().";
	protected final String TEXT_430 = "list(";
	protected final String TEXT_431 = ");";
	protected final String TEXT_432 = NL + "\t\treturn ((";
	protected final String TEXT_433 = ".Internal.Wrapper)get";
	protected final String TEXT_434 = "()).featureMap().list(";
	protected final String TEXT_435 = ");";
	protected final String TEXT_436 = NL + "\t\treturn get";
	protected final String TEXT_437 = "().list(";
	protected final String TEXT_438 = ");";
	protected final String TEXT_439 = NL + "\t\treturn ";
	protected final String TEXT_440 = "(";
	protected final String TEXT_441 = "(";
	protected final String TEXT_442 = ")";
	protected final String TEXT_443 = "((";
	protected final String TEXT_444 = ".Internal.Wrapper)get";
	protected final String TEXT_445 = "()).featureMap().get(";
	protected final String TEXT_446 = ", true)";
	protected final String TEXT_447 = ").";
	protected final String TEXT_448 = "()";
	protected final String TEXT_449 = ";";
	protected final String TEXT_450 = NL + "\t\treturn ";
	protected final String TEXT_451 = "(";
	protected final String TEXT_452 = "(";
	protected final String TEXT_453 = ")";
	protected final String TEXT_454 = "get";
	protected final String TEXT_455 = "().get(";
	protected final String TEXT_456 = ", true)";
	protected final String TEXT_457 = ").";
	protected final String TEXT_458 = "()";
	protected final String TEXT_459 = ";";
	protected final String TEXT_460 = NL + "\t\t";
	protected final String TEXT_461 = NL + "\t\t// TODO: implement this method to return the '";
	protected final String TEXT_462 = "' ";
	protected final String TEXT_463 = NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT";
	protected final String TEXT_464 = NL + "\t\t// The list is expected to implement org.eclipse.emf.ecore.util.InternalEList and org.eclipse.emf.ecore.EStructuralFeature.Setting" + NL + "\t\t// so it's likely that an appropriate subclass of org.eclipse.emf.ecore.util.";
	protected final String TEXT_465 = "EcoreEMap";
	protected final String TEXT_466 = "BasicFeatureMap";
	protected final String TEXT_467 = "EcoreEList";
	protected final String TEXT_468 = " should be used.";
	protected final String TEXT_469 = NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_470 = NL + "\t}" + NL;
	protected final String TEXT_471 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_472 = NL + "\tpublic ";
	protected final String TEXT_473 = " basicGet";
	protected final String TEXT_474 = "()" + NL + "\t{";
	protected final String TEXT_475 = NL + "\t\treturn (";
	protected final String TEXT_476 = ")eDynamicGet(";
	protected final String TEXT_477 = ", ";
	protected final String TEXT_478 = ", false, ";
	protected final String TEXT_479 = ");";
	protected final String TEXT_480 = NL + "\t\tif (eContainerFeatureID() != ";
	protected final String TEXT_481 = ") return null;" + NL + "\t\treturn (";
	protected final String TEXT_482 = ")eInternalContainer();";
	protected final String TEXT_483 = NL + "\t\treturn (";
	protected final String TEXT_484 = ")eVirtualGet(";
	protected final String TEXT_485 = ");";
	protected final String TEXT_486 = NL + "\t\treturn ";
	protected final String TEXT_487 = ";";
	protected final String TEXT_488 = NL + "\t\treturn (";
	protected final String TEXT_489 = ")((";
	protected final String TEXT_490 = ".Internal.Wrapper)get";
	protected final String TEXT_491 = "()).featureMap().get(";
	protected final String TEXT_492 = ", false);";
	protected final String TEXT_493 = NL + "\t\treturn (";
	protected final String TEXT_494 = ")get";
	protected final String TEXT_495 = "().get(";
	protected final String TEXT_496 = ", false);";
	protected final String TEXT_497 = NL + "\t\t// TODO: implement this method to return the '";
	protected final String TEXT_498 = "' ";
	protected final String TEXT_499 = NL + "\t\t// -> do not perform proxy resolution" + NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_500 = NL + "\t}" + NL;
	protected final String TEXT_501 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_502 = NL + "\tpublic ";
	protected final String TEXT_503 = " basicSet";
	protected final String TEXT_504 = "(";
	protected final String TEXT_505 = " new";
	protected final String TEXT_506 = ", ";
	protected final String TEXT_507 = " msgs)" + NL + "\t{";
	protected final String TEXT_508 = NL + "\t\tmsgs = eBasicSetContainer((";
	protected final String TEXT_509 = ")new";
	protected final String TEXT_510 = ", ";
	protected final String TEXT_511 = ", msgs);";
	protected final String TEXT_512 = NL + "\t\treturn msgs;";
	protected final String TEXT_513 = NL + "\t\tmsgs = eDynamicInverseAdd((";
	protected final String TEXT_514 = ")new";
	protected final String TEXT_515 = ", ";
	protected final String TEXT_516 = ", msgs);";
	protected final String TEXT_517 = NL + "\t\treturn msgs;";
	protected final String TEXT_518 = NL + "\t\tObject old";
	protected final String TEXT_519 = " = eVirtualSet(";
	protected final String TEXT_520 = ", new";
	protected final String TEXT_521 = ");";
	protected final String TEXT_522 = NL + "\t\t";
	protected final String TEXT_523 = " old";
	protected final String TEXT_524 = " = ";
	protected final String TEXT_525 = ";" + NL + "\t\t";
	protected final String TEXT_526 = " = new";
	protected final String TEXT_527 = ";";
	protected final String TEXT_528 = NL + "\t\tboolean isSetChange = old";
	protected final String TEXT_529 = " == EVIRTUAL_NO_VALUE;";
	protected final String TEXT_530 = NL + "\t\tboolean old";
	protected final String TEXT_531 = "ESet = (";
	protected final String TEXT_532 = " & ";
	protected final String TEXT_533 = "_ESETFLAG) != 0;";
	protected final String TEXT_534 = NL + "\t\t";
	protected final String TEXT_535 = " |= ";
	protected final String TEXT_536 = "_ESETFLAG;";
	protected final String TEXT_537 = NL + "\t\tboolean old";
	protected final String TEXT_538 = "ESet = ";
	protected final String TEXT_539 = "ESet;";
	protected final String TEXT_540 = NL + "\t\t";
	protected final String TEXT_541 = "ESet = true;";
	protected final String TEXT_542 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t{";
	protected final String TEXT_543 = NL + "\t\t\t";
	protected final String TEXT_544 = " notification = new ";
	protected final String TEXT_545 = "(this, ";
	protected final String TEXT_546 = ".SET, ";
	protected final String TEXT_547 = ", ";
	protected final String TEXT_548 = "isSetChange ? null : old";
	protected final String TEXT_549 = "old";
	protected final String TEXT_550 = ", new";
	protected final String TEXT_551 = ", ";
	protected final String TEXT_552 = "isSetChange";
	protected final String TEXT_553 = "!old";
	protected final String TEXT_554 = "ESet";
	protected final String TEXT_555 = ");";
	protected final String TEXT_556 = NL + "\t\t\t";
	protected final String TEXT_557 = " notification = new ";
	protected final String TEXT_558 = "(this, ";
	protected final String TEXT_559 = ".SET, ";
	protected final String TEXT_560 = ", ";
	protected final String TEXT_561 = "old";
	protected final String TEXT_562 = " == EVIRTUAL_NO_VALUE ? null : old";
	protected final String TEXT_563 = "old";
	protected final String TEXT_564 = ", new";
	protected final String TEXT_565 = ");";
	protected final String TEXT_566 = NL + "\t\t\tif (msgs == null) msgs = notification; else msgs.add(notification);" + NL + "\t\t}";
	protected final String TEXT_567 = NL + "\t\treturn msgs;";
	protected final String TEXT_568 = NL + "\t\treturn ((";
	protected final String TEXT_569 = ".Internal)((";
	protected final String TEXT_570 = ".Internal.Wrapper)get";
	protected final String TEXT_571 = "()).featureMap()).basicAdd(";
	protected final String TEXT_572 = ", new";
	protected final String TEXT_573 = ", msgs);";
	protected final String TEXT_574 = NL + "\t\treturn ((";
	protected final String TEXT_575 = ".Internal)get";
	protected final String TEXT_576 = "()).basicAdd(";
	protected final String TEXT_577 = ", new";
	protected final String TEXT_578 = ", msgs);";
	protected final String TEXT_579 = NL + "\t\t// TODO: implement this method to set the contained '";
	protected final String TEXT_580 = "' ";
	protected final String TEXT_581 = NL + "\t\t// -> this method is automatically invoked to keep the containment relationship in synch" + NL + "\t\t// -> do not modify other features" + NL + "\t\t// -> return msgs, after adding any generated Notification to it (if it is null, a NotificationChain object must be created first)" + NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_582 = NL + "\t}" + NL;
	protected final String TEXT_583 = NL + "\t/**" + NL + "\t * Sets the value of the '{@link ";
	protected final String TEXT_584 = "#";
	protected final String TEXT_585 = " <em>";
	protected final String TEXT_586 = "</em>}' ";
	protected final String TEXT_587 = ".";
	protected final String TEXT_588 = NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @param value the new value of the '<em>";
	protected final String TEXT_589 = "</em>' ";
	protected final String TEXT_590 = ".";
	protected final String TEXT_591 = NL + "\t * @see ";
	protected final String TEXT_592 = NL + "\t * @see #isSet";
	protected final String TEXT_593 = "()";
	protected final String TEXT_594 = NL + "\t * @see #unset";
	protected final String TEXT_595 = "()";
	protected final String TEXT_596 = NL + "\t * @see #";
	protected final String TEXT_597 = "()" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_598 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_599 = NL + "\tvoid set";
	protected final String TEXT_600 = "(";
	protected final String TEXT_601 = " value);" + NL;
	protected final String TEXT_602 = NL + "\tpublic void set";
	protected final String TEXT_603 = "_";
	protected final String TEXT_604 = "(";
	protected final String TEXT_605 = " ";
	protected final String TEXT_606 = ")" + NL + "\t{";
	protected final String TEXT_607 = NL + "\t\teDynamicSet(";
	protected final String TEXT_608 = ", ";
	protected final String TEXT_609 = ", ";
	protected final String TEXT_610 = "new ";
	protected final String TEXT_611 = "(";
	protected final String TEXT_612 = "new";
	protected final String TEXT_613 = ")";
	protected final String TEXT_614 = ");";
	protected final String TEXT_615 = NL + "\t\teSet(";
	protected final String TEXT_616 = ", ";
	protected final String TEXT_617 = "new ";
	protected final String TEXT_618 = "(";
	protected final String TEXT_619 = "new";
	protected final String TEXT_620 = ")";
	protected final String TEXT_621 = ");";
	protected final String TEXT_622 = NL + "\t\tif (new";
	protected final String TEXT_623 = " != eInternalContainer() || (eContainerFeatureID() != ";
	protected final String TEXT_624 = " && new";
	protected final String TEXT_625 = " != null))" + NL + "\t\t{" + NL + "\t\t\tif (";
	protected final String TEXT_626 = ".isAncestor(this, ";
	protected final String TEXT_627 = "new";
	protected final String TEXT_628 = "))" + NL + "\t\t\t\tthrow new ";
	protected final String TEXT_629 = "(\"Recursive containment not allowed for \" + toString());";
	protected final String TEXT_630 = NL + "\t\t\t";
	protected final String TEXT_631 = " msgs = null;" + NL + "\t\t\tif (eInternalContainer() != null)" + NL + "\t\t\t\tmsgs = eBasicRemoveFromContainer(msgs);" + NL + "\t\t\tif (new";
	protected final String TEXT_632 = " != null)" + NL + "\t\t\t\tmsgs = ((";
	protected final String TEXT_633 = ")new";
	protected final String TEXT_634 = ").eInverseAdd(this, ";
	protected final String TEXT_635 = ", ";
	protected final String TEXT_636 = ".class, msgs);" + NL + "\t\t\tmsgs = basicSet";
	protected final String TEXT_637 = "(";
	protected final String TEXT_638 = "new";
	protected final String TEXT_639 = ", msgs);" + NL + "\t\t\tif (msgs != null) msgs.dispatch();" + NL + "\t\t}";
	protected final String TEXT_640 = NL + "\t\telse if (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_641 = "(this, ";
	protected final String TEXT_642 = ".SET, ";
	protected final String TEXT_643 = ", new";
	protected final String TEXT_644 = ", new";
	protected final String TEXT_645 = "));";
	protected final String TEXT_646 = NL + "\t\t";
	protected final String TEXT_647 = " ";
	protected final String TEXT_648 = " = (";
	protected final String TEXT_649 = ")eVirtualGet(";
	protected final String TEXT_650 = ");";
	protected final String TEXT_651 = NL + "\t\tif (new";
	protected final String TEXT_652 = " != ";
	protected final String TEXT_653 = ")" + NL + "\t\t{" + NL + "\t\t\t";
	protected final String TEXT_654 = " msgs = null;" + NL + "\t\t\tif (";
	protected final String TEXT_655 = " != null)";
	protected final String TEXT_656 = NL + "\t\t\t\tmsgs = ((";
	protected final String TEXT_657 = ")";
	protected final String TEXT_658 = ").eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_659 = ", null, msgs);" + NL + "\t\t\tif (new";
	protected final String TEXT_660 = " != null)" + NL + "\t\t\t\tmsgs = ((";
	protected final String TEXT_661 = ")new";
	protected final String TEXT_662 = ").eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_663 = ", null, msgs);";
	protected final String TEXT_664 = NL + "\t\t\t\tmsgs = ((";
	protected final String TEXT_665 = ")";
	protected final String TEXT_666 = ").eInverseRemove(this, ";
	protected final String TEXT_667 = ", ";
	protected final String TEXT_668 = ".class, msgs);" + NL + "\t\t\tif (new";
	protected final String TEXT_669 = " != null)" + NL + "\t\t\t\tmsgs = ((";
	protected final String TEXT_670 = ")new";
	protected final String TEXT_671 = ").eInverseAdd(this, ";
	protected final String TEXT_672 = ", ";
	protected final String TEXT_673 = ".class, msgs);";
	protected final String TEXT_674 = NL + "\t\t\tmsgs = basicSet";
	protected final String TEXT_675 = "(";
	protected final String TEXT_676 = "new";
	protected final String TEXT_677 = ", msgs);" + NL + "\t\t\tif (msgs != null) msgs.dispatch();" + NL + "\t\t}";
	protected final String TEXT_678 = NL + "\t\telse" + NL + "\t\t{";
	protected final String TEXT_679 = NL + "\t\t\tboolean old";
	protected final String TEXT_680 = "ESet = eVirtualIsSet(";
	protected final String TEXT_681 = ");";
	protected final String TEXT_682 = NL + "\t\t\tboolean old";
	protected final String TEXT_683 = "ESet = (";
	protected final String TEXT_684 = " & ";
	protected final String TEXT_685 = "_ESETFLAG) != 0;";
	protected final String TEXT_686 = NL + "\t\t\t";
	protected final String TEXT_687 = " |= ";
	protected final String TEXT_688 = "_ESETFLAG;";
	protected final String TEXT_689 = NL + "\t\t\tboolean old";
	protected final String TEXT_690 = "ESet = ";
	protected final String TEXT_691 = "ESet;";
	protected final String TEXT_692 = NL + "\t\t\t";
	protected final String TEXT_693 = "ESet = true;";
	protected final String TEXT_694 = NL + "\t\t\tif (eNotificationRequired())" + NL + "\t\t\t\teNotify(new ";
	protected final String TEXT_695 = "(this, ";
	protected final String TEXT_696 = ".SET, ";
	protected final String TEXT_697 = ", new";
	protected final String TEXT_698 = ", new";
	protected final String TEXT_699 = ", !old";
	protected final String TEXT_700 = "ESet));";
	protected final String TEXT_701 = NL + "\t\t}";
	protected final String TEXT_702 = NL + "\t\telse if (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_703 = "(this, ";
	protected final String TEXT_704 = ".SET, ";
	protected final String TEXT_705 = ", new";
	protected final String TEXT_706 = ", new";
	protected final String TEXT_707 = "));";
	protected final String TEXT_708 = NL + "\t\t";
	protected final String TEXT_709 = " old";
	protected final String TEXT_710 = " = (";
	protected final String TEXT_711 = " & ";
	protected final String TEXT_712 = "_EFLAG) != 0;";
	protected final String TEXT_713 = NL + "\t\t";
	protected final String TEXT_714 = " old";
	protected final String TEXT_715 = " = ";
	protected final String TEXT_716 = "_EFLAG_VALUES[(";
	protected final String TEXT_717 = " & ";
	protected final String TEXT_718 = "_EFLAG) >>> ";
	protected final String TEXT_719 = "_EFLAG_OFFSET];";
	protected final String TEXT_720 = NL + "\t\tif (new";
	protected final String TEXT_721 = ") ";
	protected final String TEXT_722 = " |= ";
	protected final String TEXT_723 = "_EFLAG; else ";
	protected final String TEXT_724 = " &= ~";
	protected final String TEXT_725 = "_EFLAG;";
	protected final String TEXT_726 = NL + "\t\tif (new";
	protected final String TEXT_727 = " == null) new";
	protected final String TEXT_728 = " = ";
	protected final String TEXT_729 = "_EDEFAULT;" + NL + "\t\t";
	protected final String TEXT_730 = " = ";
	protected final String TEXT_731 = " & ~";
	protected final String TEXT_732 = "_EFLAG | ";
	protected final String TEXT_733 = "new";
	protected final String TEXT_734 = ".ordinal()";
	protected final String TEXT_735 = ".VALUES.indexOf(new";
	protected final String TEXT_736 = ")";
	protected final String TEXT_737 = " << ";
	protected final String TEXT_738 = "_EFLAG_OFFSET;";
	protected final String TEXT_739 = NL + "\t\t";
	protected final String TEXT_740 = " old";
	protected final String TEXT_741 = " = ";
	protected final String TEXT_742 = ";";
	protected final String TEXT_743 = NL + "\t\t";
	protected final String TEXT_744 = " ";
	protected final String TEXT_745 = " = new";
	protected final String TEXT_746 = " == null ? ";
	protected final String TEXT_747 = " : new";
	protected final String TEXT_748 = ";";
	protected final String TEXT_749 = NL + "\t\t";
	protected final String TEXT_750 = " = new";
	protected final String TEXT_751 = " == null ? ";
	protected final String TEXT_752 = " : new";
	protected final String TEXT_753 = ";";
	protected final String TEXT_754 = NL + "\t\t";
	protected final String TEXT_755 = " ";
	protected final String TEXT_756 = " = ";
	protected final String TEXT_757 = "new";
	protected final String TEXT_758 = ";";
	protected final String TEXT_759 = NL + "\t\t";
	protected final String TEXT_760 = " = ";
	protected final String TEXT_761 = "new";
	protected final String TEXT_762 = ";";
	protected final String TEXT_763 = NL + "\t\tObject old";
	protected final String TEXT_764 = " = eVirtualSet(";
	protected final String TEXT_765 = ", ";
	protected final String TEXT_766 = ");";
	protected final String TEXT_767 = NL + "\t\tboolean isSetChange = old";
	protected final String TEXT_768 = " == EVIRTUAL_NO_VALUE;";
	protected final String TEXT_769 = NL + "\t\tboolean old";
	protected final String TEXT_770 = "ESet = (";
	protected final String TEXT_771 = " & ";
	protected final String TEXT_772 = "_ESETFLAG) != 0;";
	protected final String TEXT_773 = NL + "\t\t";
	protected final String TEXT_774 = " |= ";
	protected final String TEXT_775 = "_ESETFLAG;";
	protected final String TEXT_776 = NL + "\t\tboolean old";
	protected final String TEXT_777 = "ESet = ";
	protected final String TEXT_778 = "ESet;";
	protected final String TEXT_779 = NL + "\t\t";
	protected final String TEXT_780 = "ESet = true;";
	protected final String TEXT_781 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_782 = "(this, ";
	protected final String TEXT_783 = ".SET, ";
	protected final String TEXT_784 = ", ";
	protected final String TEXT_785 = "isSetChange ? ";
	protected final String TEXT_786 = " : old";
	protected final String TEXT_787 = "old";
	protected final String TEXT_788 = ", ";
	protected final String TEXT_789 = "new";
	protected final String TEXT_790 = ", ";
	protected final String TEXT_791 = "isSetChange";
	protected final String TEXT_792 = "!old";
	protected final String TEXT_793 = "ESet";
	protected final String TEXT_794 = "));";
	protected final String TEXT_795 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_796 = "(this, ";
	protected final String TEXT_797 = ".SET, ";
	protected final String TEXT_798 = ", ";
	protected final String TEXT_799 = "old";
	protected final String TEXT_800 = " == EVIRTUAL_NO_VALUE ? ";
	protected final String TEXT_801 = " : old";
	protected final String TEXT_802 = "old";
	protected final String TEXT_803 = ", ";
	protected final String TEXT_804 = "new";
	protected final String TEXT_805 = "));";
	protected final String TEXT_806 = NL + "\t\t((";
	protected final String TEXT_807 = ".Internal)((";
	protected final String TEXT_808 = ".Internal.Wrapper)get";
	protected final String TEXT_809 = "()).featureMap()).set(";
	protected final String TEXT_810 = ", ";
	protected final String TEXT_811 = "new ";
	protected final String TEXT_812 = "(";
	protected final String TEXT_813 = "new";
	protected final String TEXT_814 = ")";
	protected final String TEXT_815 = ");";
	protected final String TEXT_816 = NL + "\t\t((";
	protected final String TEXT_817 = ".Internal)get";
	protected final String TEXT_818 = "()).set(";
	protected final String TEXT_819 = ", ";
	protected final String TEXT_820 = "new ";
	protected final String TEXT_821 = "(";
	protected final String TEXT_822 = "new";
	protected final String TEXT_823 = ")";
	protected final String TEXT_824 = ");";
	protected final String TEXT_825 = NL + "\t\t";
	protected final String TEXT_826 = NL + "\t\t// TODO: implement this method to set the '";
	protected final String TEXT_827 = "' ";
	protected final String TEXT_828 = NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_829 = NL + "\t}" + NL;
	protected final String TEXT_830 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_831 = NL + "\tpublic ";
	protected final String TEXT_832 = " basicUnset";
	protected final String TEXT_833 = "(";
	protected final String TEXT_834 = " msgs)" + NL + "\t{";
	protected final String TEXT_835 = NL + "\t\treturn eDynamicInverseRemove((";
	protected final String TEXT_836 = ")";
	protected final String TEXT_837 = "basicGet";
	protected final String TEXT_838 = "(), ";
	protected final String TEXT_839 = ", msgs);";
	protected final String TEXT_840 = "Object old";
	protected final String TEXT_841 = " = ";
	protected final String TEXT_842 = "eVirtualUnset(";
	protected final String TEXT_843 = ");";
	protected final String TEXT_844 = NL + "\t\t";
	protected final String TEXT_845 = " old";
	protected final String TEXT_846 = " = ";
	protected final String TEXT_847 = ";";
	protected final String TEXT_848 = NL + "\t\t";
	protected final String TEXT_849 = " = null;";
	protected final String TEXT_850 = NL + "\t\tboolean isSetChange = old";
	protected final String TEXT_851 = " != EVIRTUAL_NO_VALUE;";
	protected final String TEXT_852 = NL + "\t\tboolean old";
	protected final String TEXT_853 = "ESet = (";
	protected final String TEXT_854 = " & ";
	protected final String TEXT_855 = "_ESETFLAG) != 0;";
	protected final String TEXT_856 = NL + "\t\t";
	protected final String TEXT_857 = " &= ~";
	protected final String TEXT_858 = "_ESETFLAG;";
	protected final String TEXT_859 = NL + "\t\tboolean old";
	protected final String TEXT_860 = "ESet = ";
	protected final String TEXT_861 = "ESet;";
	protected final String TEXT_862 = NL + "\t\t";
	protected final String TEXT_863 = "ESet = false;";
	protected final String TEXT_864 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t{" + NL + "\t\t\t";
	protected final String TEXT_865 = " notification = new ";
	protected final String TEXT_866 = "(this, ";
	protected final String TEXT_867 = ".UNSET, ";
	protected final String TEXT_868 = ", ";
	protected final String TEXT_869 = "isSetChange ? old";
	protected final String TEXT_870 = " : null";
	protected final String TEXT_871 = "old";
	protected final String TEXT_872 = ", null, ";
	protected final String TEXT_873 = "isSetChange";
	protected final String TEXT_874 = "old";
	protected final String TEXT_875 = "ESet";
	protected final String TEXT_876 = ");" + NL + "\t\t\tif (msgs == null) msgs = notification; else msgs.add(notification);" + NL + "\t\t}" + NL + "\t\treturn msgs;";
	protected final String TEXT_877 = NL + "\t\t// TODO: implement this method to unset the contained '";
	protected final String TEXT_878 = "' ";
	protected final String TEXT_879 = NL + "\t\t// -> this method is automatically invoked to keep the containment relationship in synch" + NL + "\t\t// -> do not modify other features" + NL + "\t\t// -> return msgs, after adding any generated Notification to it (if it is null, a NotificationChain object must be created first)" + NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_880 = NL + "\t}" + NL;
	protected final String TEXT_881 = NL + "\t/**" + NL + "\t * Unsets the value of the '{@link ";
	protected final String TEXT_882 = "#";
	protected final String TEXT_883 = " <em>";
	protected final String TEXT_884 = "</em>}' ";
	protected final String TEXT_885 = ".";
	protected final String TEXT_886 = NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->";
	protected final String TEXT_887 = NL + "\t * @see #isSet";
	protected final String TEXT_888 = "()";
	protected final String TEXT_889 = NL + "\t * @see #";
	protected final String TEXT_890 = "()";
	protected final String TEXT_891 = NL + "\t * @see #set";
	protected final String TEXT_892 = "(";
	protected final String TEXT_893 = ")";
	protected final String TEXT_894 = NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_895 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_896 = NL + "\tvoid unset";
	protected final String TEXT_897 = "();" + NL;
	protected final String TEXT_898 = NL + "\tpublic void unset";
	protected final String TEXT_899 = "_";
	protected final String TEXT_900 = "()" + NL + "\t{";
	protected final String TEXT_901 = NL + "\t\teDynamicUnset(";
	protected final String TEXT_902 = ", ";
	protected final String TEXT_903 = ");";
	protected final String TEXT_904 = NL + "\t\teUnset(";
	protected final String TEXT_905 = ");";
	protected final String TEXT_906 = NL + "\t\t";
	protected final String TEXT_907 = " ";
	protected final String TEXT_908 = " = (";
	protected final String TEXT_909 = ")eVirtualGet(";
	protected final String TEXT_910 = ");";
	protected final String TEXT_911 = NL + "\t\tif (";
	protected final String TEXT_912 = " != null) ((";
	protected final String TEXT_913 = ".Unsettable";
	protected final String TEXT_914 = ")";
	protected final String TEXT_915 = ").unset();";
	protected final String TEXT_916 = NL + "\t\t";
	protected final String TEXT_917 = " ";
	protected final String TEXT_918 = " = (";
	protected final String TEXT_919 = ")eVirtualGet(";
	protected final String TEXT_920 = ");";
	protected final String TEXT_921 = NL + "\t\tif (";
	protected final String TEXT_922 = " != null)" + NL + "\t\t{" + NL + "\t\t\t";
	protected final String TEXT_923 = " msgs = null;";
	protected final String TEXT_924 = NL + "\t\t\tmsgs = ((";
	protected final String TEXT_925 = ")";
	protected final String TEXT_926 = ").eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_927 = ", null, msgs);";
	protected final String TEXT_928 = NL + "\t\t\tmsgs = ((";
	protected final String TEXT_929 = ")";
	protected final String TEXT_930 = ").eInverseRemove(this, ";
	protected final String TEXT_931 = ", ";
	protected final String TEXT_932 = ".class, msgs);";
	protected final String TEXT_933 = NL + "\t\t\tmsgs = basicUnset";
	protected final String TEXT_934 = "(msgs);" + NL + "\t\t\tif (msgs != null) msgs.dispatch();" + NL + "\t\t}" + NL + "\t\telse" + NL + "\t\t{";
	protected final String TEXT_935 = NL + "\t\t\tboolean old";
	protected final String TEXT_936 = "ESet = eVirtualIsSet(";
	protected final String TEXT_937 = ");";
	protected final String TEXT_938 = NL + "\t\t\tboolean old";
	protected final String TEXT_939 = "ESet = (";
	protected final String TEXT_940 = " & ";
	protected final String TEXT_941 = "_ESETFLAG) != 0;";
	protected final String TEXT_942 = NL + "\t\t\t";
	protected final String TEXT_943 = " &= ~";
	protected final String TEXT_944 = "_ESETFLAG;";
	protected final String TEXT_945 = NL + "\t\t\tboolean old";
	protected final String TEXT_946 = "ESet = ";
	protected final String TEXT_947 = "ESet;";
	protected final String TEXT_948 = NL + "\t\t\t";
	protected final String TEXT_949 = "ESet = false;";
	protected final String TEXT_950 = NL + "\t\t\tif (eNotificationRequired())" + NL + "\t\t\t\teNotify(new ";
	protected final String TEXT_951 = "(this, ";
	protected final String TEXT_952 = ".UNSET, ";
	protected final String TEXT_953 = ", null, null, old";
	protected final String TEXT_954 = "ESet));";
	protected final String TEXT_955 = NL + "\t\t}";
	protected final String TEXT_956 = NL + "\t\t";
	protected final String TEXT_957 = " old";
	protected final String TEXT_958 = " = (";
	protected final String TEXT_959 = " & ";
	protected final String TEXT_960 = "_EFLAG) != 0;";
	protected final String TEXT_961 = NL + "\t\t";
	protected final String TEXT_962 = " old";
	protected final String TEXT_963 = " = ";
	protected final String TEXT_964 = "_EFLAG_VALUES[(";
	protected final String TEXT_965 = " & ";
	protected final String TEXT_966 = "_EFLAG) >>> ";
	protected final String TEXT_967 = "_EFLAG_OFFSET];";
	protected final String TEXT_968 = NL + "\t\tObject old";
	protected final String TEXT_969 = " = eVirtualUnset(";
	protected final String TEXT_970 = ");";
	protected final String TEXT_971 = NL + "\t\t";
	protected final String TEXT_972 = " old";
	protected final String TEXT_973 = " = ";
	protected final String TEXT_974 = ";";
	protected final String TEXT_975 = NL + "\t\tboolean isSetChange = old";
	protected final String TEXT_976 = " != EVIRTUAL_NO_VALUE;";
	protected final String TEXT_977 = NL + "\t\tboolean old";
	protected final String TEXT_978 = "ESet = (";
	protected final String TEXT_979 = " & ";
	protected final String TEXT_980 = "_ESETFLAG) != 0;";
	protected final String TEXT_981 = NL + "\t\tboolean old";
	protected final String TEXT_982 = "ESet = ";
	protected final String TEXT_983 = "ESet;";
	protected final String TEXT_984 = NL + "\t\t";
	protected final String TEXT_985 = " = null;";
	protected final String TEXT_986 = NL + "\t\t";
	protected final String TEXT_987 = " &= ~";
	protected final String TEXT_988 = "_ESETFLAG;";
	protected final String TEXT_989 = NL + "\t\t";
	protected final String TEXT_990 = "ESet = false;";
	protected final String TEXT_991 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_992 = "(this, ";
	protected final String TEXT_993 = ".UNSET, ";
	protected final String TEXT_994 = ", ";
	protected final String TEXT_995 = "isSetChange ? old";
	protected final String TEXT_996 = " : null";
	protected final String TEXT_997 = "old";
	protected final String TEXT_998 = ", null, ";
	protected final String TEXT_999 = "isSetChange";
	protected final String TEXT_1000 = "old";
	protected final String TEXT_1001 = "ESet";
	protected final String TEXT_1002 = "));";
	protected final String TEXT_1003 = NL + "\t\tif (";
	protected final String TEXT_1004 = ") ";
	protected final String TEXT_1005 = " |= ";
	protected final String TEXT_1006 = "_EFLAG; else ";
	protected final String TEXT_1007 = " &= ~";
	protected final String TEXT_1008 = "_EFLAG;";
	protected final String TEXT_1009 = NL + "\t\t";
	protected final String TEXT_1010 = " = ";
	protected final String TEXT_1011 = " & ~";
	protected final String TEXT_1012 = "_EFLAG | ";
	protected final String TEXT_1013 = "_EFLAG_DEFAULT;";
	protected final String TEXT_1014 = NL + "\t\t";
	protected final String TEXT_1015 = " = ";
	protected final String TEXT_1016 = ";";
	protected final String TEXT_1017 = NL + "\t\t";
	protected final String TEXT_1018 = " &= ~";
	protected final String TEXT_1019 = "_ESETFLAG;";
	protected final String TEXT_1020 = NL + "\t\t";
	protected final String TEXT_1021 = "ESet = false;";
	protected final String TEXT_1022 = NL + "\t\tif (eNotificationRequired())" + NL + "\t\t\teNotify(new ";
	protected final String TEXT_1023 = "(this, ";
	protected final String TEXT_1024 = ".UNSET, ";
	protected final String TEXT_1025 = ", ";
	protected final String TEXT_1026 = "isSetChange ? old";
	protected final String TEXT_1027 = " : ";
	protected final String TEXT_1028 = "old";
	protected final String TEXT_1029 = ", ";
	protected final String TEXT_1030 = ", ";
	protected final String TEXT_1031 = "isSetChange";
	protected final String TEXT_1032 = "old";
	protected final String TEXT_1033 = "ESet";
	protected final String TEXT_1034 = "));";
	protected final String TEXT_1035 = NL + "\t\t((";
	protected final String TEXT_1036 = ".Internal)((";
	protected final String TEXT_1037 = ".Internal.Wrapper)get";
	protected final String TEXT_1038 = "()).featureMap()).clear(";
	protected final String TEXT_1039 = ");";
	protected final String TEXT_1040 = NL + "\t\t((";
	protected final String TEXT_1041 = ".Internal)get";
	protected final String TEXT_1042 = "()).clear(";
	protected final String TEXT_1043 = ");";
	protected final String TEXT_1044 = NL + "\t\t";
	protected final String TEXT_1045 = NL + "\t\t// TODO: implement this method to unset the '";
	protected final String TEXT_1046 = "' ";
	protected final String TEXT_1047 = NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_1048 = NL + "\t}" + NL;
	protected final String TEXT_1049 = NL + "\t/**" + NL + "\t * Returns whether the value of the '{@link ";
	protected final String TEXT_1050 = "#";
	protected final String TEXT_1051 = " <em>";
	protected final String TEXT_1052 = "</em>}' ";
	protected final String TEXT_1053 = " is set.";
	protected final String TEXT_1054 = NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @return whether the value of the '<em>";
	protected final String TEXT_1055 = "</em>' ";
	protected final String TEXT_1056 = " is set.";
	protected final String TEXT_1057 = NL + "\t * @see #unset";
	protected final String TEXT_1058 = "()";
	protected final String TEXT_1059 = NL + "\t * @see #";
	protected final String TEXT_1060 = "()";
	protected final String TEXT_1061 = NL + "\t * @see #set";
	protected final String TEXT_1062 = "(";
	protected final String TEXT_1063 = ")";
	protected final String TEXT_1064 = NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1065 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1066 = NL + "\tboolean isSet";
	protected final String TEXT_1067 = "();" + NL;
	protected final String TEXT_1068 = NL + "\tpublic boolean isSet";
	protected final String TEXT_1069 = "_";
	protected final String TEXT_1070 = "()" + NL + "\t{";
	protected final String TEXT_1071 = NL + "\t\treturn eDynamicIsSet(";
	protected final String TEXT_1072 = ", ";
	protected final String TEXT_1073 = ");";
	protected final String TEXT_1074 = NL + "\t\treturn eIsSet(";
	protected final String TEXT_1075 = ");";
	protected final String TEXT_1076 = NL + "\t\t";
	protected final String TEXT_1077 = " ";
	protected final String TEXT_1078 = " = (";
	protected final String TEXT_1079 = ")eVirtualGet(";
	protected final String TEXT_1080 = ");";
	protected final String TEXT_1081 = NL + "\t\treturn ";
	protected final String TEXT_1082 = " != null && ((";
	protected final String TEXT_1083 = ".Unsettable";
	protected final String TEXT_1084 = ")";
	protected final String TEXT_1085 = ").isSet();";
	protected final String TEXT_1086 = NL + "\t\treturn eVirtualIsSet(";
	protected final String TEXT_1087 = ");";
	protected final String TEXT_1088 = NL + "\t\treturn (";
	protected final String TEXT_1089 = " & ";
	protected final String TEXT_1090 = "_ESETFLAG) != 0;";
	protected final String TEXT_1091 = NL + "\t\treturn ";
	protected final String TEXT_1092 = "ESet;";
	protected final String TEXT_1093 = NL + "\t\treturn !((";
	protected final String TEXT_1094 = ".Internal)((";
	protected final String TEXT_1095 = ".Internal.Wrapper)get";
	protected final String TEXT_1096 = "()).featureMap()).isEmpty(";
	protected final String TEXT_1097 = ");";
	protected final String TEXT_1098 = NL + "\t\treturn !((";
	protected final String TEXT_1099 = ".Internal)get";
	protected final String TEXT_1100 = "()).isEmpty(";
	protected final String TEXT_1101 = ");";
	protected final String TEXT_1102 = NL + "\t\t";
	protected final String TEXT_1103 = NL + "\t\t// TODO: implement this method to return whether the '";
	protected final String TEXT_1104 = "' ";
	protected final String TEXT_1105 = " is set" + NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tthrow new UnsupportedOperationException();";
	protected final String TEXT_1106 = NL + "\t}" + NL;
	protected final String TEXT_1107 = NL + "\t/**";
	protected final String TEXT_1108 = NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->";
	protected final String TEXT_1109 = NL + "\t * <!-- begin-model-doc -->";
	protected final String TEXT_1110 = NL + "\t * ";
	protected final String TEXT_1111 = NL + "\t * @param ";
	protected final String TEXT_1112 = NL + "\t *   ";
	protected final String TEXT_1113 = NL + "\t * @param ";
	protected final String TEXT_1114 = " ";
	protected final String TEXT_1115 = NL + "\t * <!-- end-model-doc -->";
	protected final String TEXT_1116 = NL + "\t * @model ";
	protected final String TEXT_1117 = NL + "\t *        ";
	protected final String TEXT_1118 = NL + "\t * @model";
	protected final String TEXT_1119 = NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1120 = NL + "\t\t/**" + NL + "\t\t * <!-- begin-user-doc -->" + NL + "\t\t * <!-- end-user-doc -->" + NL + "\t\t * @generated" + NL + "\t\t */";
	protected final String TEXT_1121 = NL + "\t";
	protected final String TEXT_1122 = " ";
	protected final String TEXT_1123 = "(";
	protected final String TEXT_1124 = ")";
	protected final String TEXT_1125 = ";" + NL;
	protected final String TEXT_1126 = NL + "\t\tpublic ";
	protected final String TEXT_1127 = " ";
	protected final String TEXT_1128 = "(";
	protected final String TEXT_1129 = ")";
	protected final String TEXT_1130 = NL + "\t\t{";
	protected final String TEXT_1131 = NL + "\t\t";
	protected final String TEXT_1132 = NL + "\t\t// TODO: implement this method" + NL + "\t\t// -> specify the condition that violates the invariant" + NL + "\t\t// -> verify the details of the diagnostic, including severity and message" + NL + "\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\tif (false)" + NL + "\t\t{" + NL + "\t\t\tif (";
	protected final String TEXT_1133 = " != null)" + NL + "\t\t\t{" + NL + "\t\t\t\t";
	protected final String TEXT_1134 = ".add" + NL + "\t\t\t\t\t(new ";
	protected final String TEXT_1135 = NL + "\t\t\t\t\t\t(";
	protected final String TEXT_1136 = ".ERROR," + NL + "\t\t\t\t\t\t ";
	protected final String TEXT_1137 = ".DIAGNOSTIC_SOURCE," + NL + "\t\t\t\t\t\t ";
	protected final String TEXT_1138 = ".";
	protected final String TEXT_1139 = "," + NL + "\t\t\t\t\t\t ";
	protected final String TEXT_1140 = ".INSTANCE.getString(\"_UI_GenericInvariant_diagnostic\", new Object[] { \"";
	protected final String TEXT_1141 = "\", ";
	protected final String TEXT_1142 = ".getObjectLabel(this, ";
	protected final String TEXT_1143 = ") }),";
	protected final String TEXT_1144 = NL + "\t\t\t\t\t\t new Object [] { this }));" + NL + "\t\t\t}" + NL + "\t\t\treturn false;" + NL + "\t\t}" + NL + "\t\treturn true;";
	protected final String TEXT_1145 = NL + "\t\t\t// TODO: implement this method" + NL + "\t\t\t// Ensure that you remove @generated or mark it @generated NOT" + NL + "\t\t\treturn null;";
	protected final String TEXT_1146 = NL + "\t\t}" + NL;
	protected final String TEXT_1147 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1148 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_1149 = NL + "\t@Override";
	protected final String TEXT_1150 = NL + "\tpublic ";
	protected final String TEXT_1151 = " eInverseAdd(";
	protected final String TEXT_1152 = " otherEnd, int featureID, ";
	protected final String TEXT_1153 = " msgs)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1154 = ")" + NL + "\t\t{";
	protected final String TEXT_1155 = NL + "\t\t\tcase ";
	protected final String TEXT_1156 = ":";
	protected final String TEXT_1157 = NL + "\t\t\t\treturn ((";
	protected final String TEXT_1158 = "(";
	protected final String TEXT_1159 = ".InternalMapView";
	protected final String TEXT_1160 = ")";
	protected final String TEXT_1161 = "()).eMap()).basicAdd(otherEnd, msgs);";
	protected final String TEXT_1162 = NL + "\t\t\t\treturn (";
	protected final String TEXT_1163 = "()).basicAdd(otherEnd, msgs);";
	protected final String TEXT_1164 = NL + "\t\t\t\tif (eInternalContainer() != null)" + NL + "\t\t\t\t\tmsgs = eBasicRemoveFromContainer(msgs);";
	protected final String TEXT_1165 = NL + "\t\t\t\treturn basicSet";
	protected final String TEXT_1166 = "((";
	protected final String TEXT_1167 = ")otherEnd, msgs);";
	protected final String TEXT_1168 = NL + "\t\t\t\treturn eBasicSetContainer(otherEnd, ";
	protected final String TEXT_1169 = ", msgs);";
	protected final String TEXT_1170 = NL + "\t\t\t\t";
	protected final String TEXT_1171 = " ";
	protected final String TEXT_1172 = " = (";
	protected final String TEXT_1173 = ")eVirtualGet(";
	protected final String TEXT_1174 = ");";
	protected final String TEXT_1175 = NL + "\t\t\t\t";
	protected final String TEXT_1176 = " ";
	protected final String TEXT_1177 = " = ";
	protected final String TEXT_1178 = "basicGet";
	protected final String TEXT_1179 = "();";
	protected final String TEXT_1180 = NL + "\t\t\t\tif (";
	protected final String TEXT_1181 = " != null)";
	protected final String TEXT_1182 = NL + "\t\t\t\t\tmsgs = ((";
	protected final String TEXT_1183 = ")";
	protected final String TEXT_1184 = ").eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ";
	protected final String TEXT_1185 = ", null, msgs);";
	protected final String TEXT_1186 = NL + "\t\t\t\t\tmsgs = ((";
	protected final String TEXT_1187 = ")";
	protected final String TEXT_1188 = ").eInverseRemove(this, ";
	protected final String TEXT_1189 = ", ";
	protected final String TEXT_1190 = ".class, msgs);";
	protected final String TEXT_1191 = NL + "\t\t\t\treturn basicSet";
	protected final String TEXT_1192 = "((";
	protected final String TEXT_1193 = ")otherEnd, msgs);";
	protected final String TEXT_1194 = NL + "\t\t}";
	protected final String TEXT_1195 = NL + "\t\treturn super.eInverseAdd(otherEnd, featureID, msgs);";
	protected final String TEXT_1196 = NL + "\t\treturn eDynamicInverseAdd(otherEnd, featureID, msgs);";
	protected final String TEXT_1197 = NL + "\t}" + NL;
	protected final String TEXT_1198 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1199 = NL + "\t@Override";
	protected final String TEXT_1200 = NL + "\tpublic ";
	protected final String TEXT_1201 = " eInverseRemove(";
	protected final String TEXT_1202 = " otherEnd, int featureID, ";
	protected final String TEXT_1203 = " msgs)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1204 = ")" + NL + "\t\t{";
	protected final String TEXT_1205 = NL + "\t\t\tcase ";
	protected final String TEXT_1206 = ":";
	protected final String TEXT_1207 = NL + "\t\t\t\treturn ((";
	protected final String TEXT_1208 = ")((";
	protected final String TEXT_1209 = ".InternalMapView";
	protected final String TEXT_1210 = ")";
	protected final String TEXT_1211 = "()).eMap()).basicRemove(otherEnd, msgs);";
	protected final String TEXT_1212 = NL + "\t\t\t\treturn ((";
	protected final String TEXT_1213 = ")((";
	protected final String TEXT_1214 = ".Internal.Wrapper)";
	protected final String TEXT_1215 = "()).featureMap()).basicRemove(otherEnd, msgs);";
	protected final String TEXT_1216 = NL + "\t\t\t\treturn ((";
	protected final String TEXT_1217 = ")";
	protected final String TEXT_1218 = "()).basicRemove(otherEnd, msgs);";
	protected final String TEXT_1219 = NL + "\t\t\t\treturn eBasicSetContainer(null, ";
	protected final String TEXT_1220 = ", msgs);";
	protected final String TEXT_1221 = NL + "\t\t\t\treturn basicUnset";
	protected final String TEXT_1222 = "(msgs);";
	protected final String TEXT_1223 = NL + "\t\t\t\treturn basicSet";
	protected final String TEXT_1224 = "(null, msgs);";
	protected final String TEXT_1225 = NL + "\t\t}";
	protected final String TEXT_1226 = NL + "\t\treturn super.eInverseRemove(otherEnd, featureID, msgs);";
	protected final String TEXT_1227 = NL + "\t\treturn eDynamicInverseRemove(otherEnd, featureID, msgs);";
	protected final String TEXT_1228 = NL + "\t}" + NL;
	protected final String TEXT_1229 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1230 = NL + "\t@Override";
	protected final String TEXT_1231 = NL + "\tpublic ";
	protected final String TEXT_1232 = " eBasicRemoveFromContainerFeature(";
	protected final String TEXT_1233 = " msgs)" + NL + "\t{" + NL + "\t\tswitch (eContainerFeatureID()";
	protected final String TEXT_1234 = ")" + NL + "\t\t{";
	protected final String TEXT_1235 = NL + "\t\t\tcase ";
	protected final String TEXT_1236 = ":" + NL + "\t\t\t\treturn eInternalContainer().eInverseRemove(this, ";
	protected final String TEXT_1237 = ", ";
	protected final String TEXT_1238 = ".class, msgs);";
	protected final String TEXT_1239 = NL + "\t\t}";
	protected final String TEXT_1240 = NL + "\t\treturn super.eBasicRemoveFromContainerFeature(msgs);";
	protected final String TEXT_1241 = NL + "\t\treturn eDynamicBasicRemoveFromContainer(msgs);";
	protected final String TEXT_1242 = NL + "\t}" + NL;
	protected final String TEXT_1243 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1244 = NL + "\t@Override";
	protected final String TEXT_1245 = NL + "\tpublic Object eGet(int featureID, boolean resolve, boolean coreType)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1246 = ")" + NL + "\t\t{";
	protected final String TEXT_1247 = NL + "\t\t\tcase ";
	protected final String TEXT_1248 = ":";
	protected final String TEXT_1249 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1250 = "();";
	protected final String TEXT_1251 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1252 = "() ? Boolean.TRUE : Boolean.FALSE;";
	protected final String TEXT_1253 = NL + "\t\t\t\treturn new ";
	protected final String TEXT_1254 = "(";
	protected final String TEXT_1255 = "());";
	protected final String TEXT_1256 = NL + "\t\t\t\tif (resolve) return ";
	protected final String TEXT_1257 = "();" + NL + "\t\t\t\treturn basicGet";
	protected final String TEXT_1258 = "();";
	protected final String TEXT_1259 = NL + "\t\t\t\tif (coreType) return ((";
	protected final String TEXT_1260 = ".InternalMapView";
	protected final String TEXT_1261 = ")";
	protected final String TEXT_1262 = "()).eMap();" + NL + "\t\t\t\telse return ";
	protected final String TEXT_1263 = "();";
	protected final String TEXT_1264 = NL + "\t\t\t\tif (coreType) return ";
	protected final String TEXT_1265 = "();" + NL + "\t\t\t\telse return ";
	protected final String TEXT_1266 = "().map();";
	protected final String TEXT_1267 = NL + "\t\t\t\tif (coreType) return ((";
	protected final String TEXT_1268 = ".Internal.Wrapper)";
	protected final String TEXT_1269 = "()).featureMap();" + NL + "\t\t\t\treturn ";
	protected final String TEXT_1270 = "();";
	protected final String TEXT_1271 = NL + "\t\t\t\tif (coreType) return ";
	protected final String TEXT_1272 = "();" + NL + "\t\t\t\treturn ((";
	protected final String TEXT_1273 = ".Internal)";
	protected final String TEXT_1274 = "()).getWrapper();";
	protected final String TEXT_1275 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1276 = "();";
	protected final String TEXT_1277 = NL + "\t\t}";
	protected final String TEXT_1278 = NL + "\t\treturn super.eGet(featureID, resolve, coreType);";
	protected final String TEXT_1279 = NL + "\t\treturn eDynamicGet(featureID, resolve, coreType);";
	protected final String TEXT_1280 = NL + "\t}" + NL;
	protected final String TEXT_1281 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1282 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_1283 = NL + "\t@Override";
	protected final String TEXT_1284 = NL + "\tpublic void eSet(int featureID, Object newValue)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1285 = ")" + NL + "\t\t{";
	protected final String TEXT_1286 = NL + "\t\t\tcase ";
	protected final String TEXT_1287 = ":";
	protected final String TEXT_1288 = NL + "\t\t\t\t((";
	protected final String TEXT_1289 = ".Internal)((";
	protected final String TEXT_1290 = ".Internal.Wrapper)";
	protected final String TEXT_1291 = "()).featureMap()).set(newValue);";
	protected final String TEXT_1292 = NL + "\t\t\t\t((";
	protected final String TEXT_1293 = ".Internal)";
	protected final String TEXT_1294 = "()).set(newValue);";
	protected final String TEXT_1295 = NL + "\t\t\t\t((";
	protected final String TEXT_1296 = ".Setting)((";
	protected final String TEXT_1297 = ".InternalMapView";
	protected final String TEXT_1298 = ")";
	protected final String TEXT_1299 = "()).eMap()).set(newValue);";
	protected final String TEXT_1300 = NL + "\t\t\t\t((";
	protected final String TEXT_1301 = ".Setting)";
	protected final String TEXT_1302 = "()).set(newValue);";
	protected final String TEXT_1303 = NL + "\t\t\t\t";
	protected final String TEXT_1304 = "().clear();" + NL + "\t\t\t\t";
	protected final String TEXT_1305 = "().addAll((";
	protected final String TEXT_1306 = "<? extends ";
	protected final String TEXT_1307 = ">";
	protected final String TEXT_1308 = ")newValue);";
	protected final String TEXT_1309 = NL + "\t\t\t\tset";
	protected final String TEXT_1310 = "(((";
	protected final String TEXT_1311 = ")newValue).";
	protected final String TEXT_1312 = "());";
	protected final String TEXT_1313 = NL + "\t\t\t\tset";
	protected final String TEXT_1314 = "(";
	protected final String TEXT_1315 = "(";
	protected final String TEXT_1316 = ")";
	protected final String TEXT_1317 = "newValue);";
	protected final String TEXT_1318 = NL + "\t\t\t\treturn;";
	protected final String TEXT_1319 = NL + "\t\t}";
	protected final String TEXT_1320 = NL + "\t\tsuper.eSet(featureID, newValue);";
	protected final String TEXT_1321 = NL + "\t\teDynamicSet(featureID, newValue);";
	protected final String TEXT_1322 = NL + "\t}" + NL;
	protected final String TEXT_1323 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1324 = NL + "\t@Override";
	protected final String TEXT_1325 = NL + "\tpublic void eUnset(int featureID)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1326 = ")" + NL + "\t\t{";
	protected final String TEXT_1327 = NL + "\t\t\tcase ";
	protected final String TEXT_1328 = ":";
	protected final String TEXT_1329 = NL + "\t\t\t\t((";
	protected final String TEXT_1330 = ".Internal.Wrapper)";
	protected final String TEXT_1331 = "()).featureMap().clear();";
	protected final String TEXT_1332 = NL + "\t\t\t\t";
	protected final String TEXT_1333 = "().clear();";
	protected final String TEXT_1334 = NL + "\t\t\t\tunset";
	protected final String TEXT_1335 = "();";
	protected final String TEXT_1336 = NL + "\t\t\t\tset";
	protected final String TEXT_1337 = "((";
	protected final String TEXT_1338 = ")null);";
	protected final String TEXT_1339 = NL + "\t\t\t\tset";
	protected final String TEXT_1340 = "(";
	protected final String TEXT_1341 = ");";
	protected final String TEXT_1342 = NL + "\t\t\t\treturn;";
	protected final String TEXT_1343 = NL + "\t\t}";
	protected final String TEXT_1344 = NL + "\t\tsuper.eUnset(featureID);";
	protected final String TEXT_1345 = NL + "\t\teDynamicUnset(featureID);";
	protected final String TEXT_1346 = NL + "\t}" + NL;
	protected final String TEXT_1347 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1348 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_1349 = NL + "\t@Override";
	protected final String TEXT_1350 = NL + "\tpublic boolean eIsSet(int featureID)" + NL + "\t{" + NL + "\t\tswitch (featureID";
	protected final String TEXT_1351 = ")" + NL + "\t\t{";
	protected final String TEXT_1352 = NL + "\t\t\tcase ";
	protected final String TEXT_1353 = ":";
	protected final String TEXT_1354 = NL + "\t\t\t\treturn !((";
	protected final String TEXT_1355 = ".Internal.Wrapper)";
	protected final String TEXT_1356 = "()).featureMap().isEmpty();";
	protected final String TEXT_1357 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1358 = " != null && !";
	protected final String TEXT_1359 = ".featureMap().isEmpty();";
	protected final String TEXT_1360 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1361 = " != null && !";
	protected final String TEXT_1362 = ".isEmpty();";
	protected final String TEXT_1363 = NL + "\t\t\t\t";
	protected final String TEXT_1364 = " ";
	protected final String TEXT_1365 = " = (";
	protected final String TEXT_1366 = ")eVirtualGet(";
	protected final String TEXT_1367 = ");" + NL + "\t\t\t\treturn ";
	protected final String TEXT_1368 = " != null && !";
	protected final String TEXT_1369 = ".isEmpty();";
	protected final String TEXT_1370 = NL + "\t\t\t\treturn !";
	protected final String TEXT_1371 = "().isEmpty();";
	protected final String TEXT_1372 = NL + "\t\t\t\treturn isSet";
	protected final String TEXT_1373 = "();";
	protected final String TEXT_1374 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1375 = " != null;";
	protected final String TEXT_1376 = NL + "\t\t\t\treturn eVirtualGet(";
	protected final String TEXT_1377 = ") != null;";
	protected final String TEXT_1378 = NL + "\t\t\t\treturn basicGet";
	protected final String TEXT_1379 = "() != null;";
	protected final String TEXT_1380 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1381 = " != null;";
	protected final String TEXT_1382 = NL + "\t\t\t\treturn eVirtualGet(";
	protected final String TEXT_1383 = ") != null;";
	protected final String TEXT_1384 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1385 = "() != null;";
	protected final String TEXT_1386 = NL + "\t\t\t\treturn ((";
	protected final String TEXT_1387 = " & ";
	protected final String TEXT_1388 = "_EFLAG) != 0) != ";
	protected final String TEXT_1389 = ";";
	protected final String TEXT_1390 = NL + "\t\t\t\treturn (";
	protected final String TEXT_1391 = " & ";
	protected final String TEXT_1392 = "_EFLAG) != ";
	protected final String TEXT_1393 = "_EFLAG_DEFAULT;";
	protected final String TEXT_1394 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1395 = " != ";
	protected final String TEXT_1396 = ";";
	protected final String TEXT_1397 = NL + "\t\t\t\treturn eVirtualGet(";
	protected final String TEXT_1398 = ", ";
	protected final String TEXT_1399 = ") != ";
	protected final String TEXT_1400 = ";";
	protected final String TEXT_1401 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1402 = "() != ";
	protected final String TEXT_1403 = ";";
	protected final String TEXT_1404 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1405 = " == null ? ";
	protected final String TEXT_1406 = " != null : !";
	protected final String TEXT_1407 = ".equals(";
	protected final String TEXT_1408 = ");";
	protected final String TEXT_1409 = NL + "\t\t\t\t";
	protected final String TEXT_1410 = " ";
	protected final String TEXT_1411 = " = (";
	protected final String TEXT_1412 = ")eVirtualGet(";
	protected final String TEXT_1413 = ", ";
	protected final String TEXT_1414 = ");" + NL + "\t\t\t\treturn ";
	protected final String TEXT_1415 = " == null ? ";
	protected final String TEXT_1416 = " != null : !";
	protected final String TEXT_1417 = ".equals(";
	protected final String TEXT_1418 = ");";
	protected final String TEXT_1419 = NL + "\t\t\t\treturn ";
	protected final String TEXT_1420 = " == null ? ";
	protected final String TEXT_1421 = "() != null : !";
	protected final String TEXT_1422 = ".equals(";
	protected final String TEXT_1423 = "());";
	protected final String TEXT_1424 = NL + "\t\t}";
	protected final String TEXT_1425 = NL + "\t\treturn super.eIsSet(featureID);";
	protected final String TEXT_1426 = NL + "\t\treturn eDynamicIsSet(featureID);";
	protected final String TEXT_1427 = NL + "\t}" + NL;
	protected final String TEXT_1428 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1429 = NL + "\t@Override";
	protected final String TEXT_1430 = NL + "\tpublic int eBaseStructuralFeatureID(int derivedFeatureID, Class";
	protected final String TEXT_1431 = " baseClass)" + NL + "\t{";
	protected final String TEXT_1432 = NL + "\t\tif (baseClass == ";
	protected final String TEXT_1433 = ".class)" + NL + "\t\t{" + NL + "\t\t\tswitch (derivedFeatureID";
	protected final String TEXT_1434 = ")" + NL + "\t\t\t{";
	protected final String TEXT_1435 = NL + "\t\t\t\tcase ";
	protected final String TEXT_1436 = ": return ";
	protected final String TEXT_1437 = ";";
	protected final String TEXT_1438 = NL + "\t\t\t\tdefault: return -1;" + NL + "\t\t\t}" + NL + "\t\t}";
	protected final String TEXT_1439 = NL + "\t\treturn super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);" + NL + "\t}";
	protected final String TEXT_1440 = NL + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1441 = NL + "\t@Override";
	protected final String TEXT_1442 = NL + "\tpublic int eDerivedStructuralFeatureID(int baseFeatureID, Class";
	protected final String TEXT_1443 = " baseClass)" + NL + "\t{";
	protected final String TEXT_1444 = NL + "\t\tif (baseClass == ";
	protected final String TEXT_1445 = ".class)" + NL + "\t\t{" + NL + "\t\t\tswitch (baseFeatureID)" + NL + "\t\t\t{";
	protected final String TEXT_1446 = NL + "\t\t\t\tcase ";
	protected final String TEXT_1447 = ": return ";
	protected final String TEXT_1448 = ";";
	protected final String TEXT_1449 = NL + "\t\t\t\tdefault: return -1;" + NL + "\t\t\t}" + NL + "\t\t}";
	protected final String TEXT_1450 = NL + "\t\tif (baseClass == ";
	protected final String TEXT_1451 = ".class)" + NL + "\t\t{" + NL + "\t\t\tswitch (baseFeatureID";
	protected final String TEXT_1452 = ")" + NL + "\t\t\t{";
	protected final String TEXT_1453 = NL + "\t\t\t\tcase ";
	protected final String TEXT_1454 = ": return ";
	protected final String TEXT_1455 = ";";
	protected final String TEXT_1456 = NL + "\t\t\t\tdefault: return -1;" + NL + "\t\t\t}" + NL + "\t\t}";
	protected final String TEXT_1457 = NL + "\t\treturn super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);" + NL + "\t}" + NL;
	protected final String TEXT_1458 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1459 = NL + "\t@Override";
	protected final String TEXT_1460 = NL + "\tprotected Object[] eVirtualValues()" + NL + "\t{" + NL + "\t\treturn ";
	protected final String TEXT_1461 = ";" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1462 = NL + "\t@Override";
	protected final String TEXT_1463 = NL + "\tprotected void eSetVirtualValues(Object[] newValues)" + NL + "\t{" + NL + "\t\t";
	protected final String TEXT_1464 = " = newValues;" + NL + "\t}" + NL;
	protected final String TEXT_1465 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1466 = NL + "\t@Override";
	protected final String TEXT_1467 = NL + "\tprotected int eVirtualIndexBits(int offset)" + NL + "\t{" + NL + "\t\tswitch (offset)" + NL + "\t\t{";
	protected final String TEXT_1468 = NL + "\t\t\tcase ";
	protected final String TEXT_1469 = " :" + NL + "\t\t\t\treturn ";
	protected final String TEXT_1470 = ";";
	protected final String TEXT_1471 = NL + "\t\t\tdefault :" + NL + "\t\t\t\tthrow new IndexOutOfBoundsException();" + NL + "\t\t}" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1472 = NL + "\t@Override";
	protected final String TEXT_1473 = NL + "\tprotected void eSetVirtualIndexBits(int offset, int newIndexBits)" + NL + "\t{" + NL + "\t\tswitch (offset)" + NL + "\t\t{";
	protected final String TEXT_1474 = NL + "\t\t\tcase ";
	protected final String TEXT_1475 = " :" + NL + "\t\t\t\t";
	protected final String TEXT_1476 = " = newIndexBits;" + NL + "\t\t\t\tbreak;";
	protected final String TEXT_1477 = NL + "\t\t\tdefault :" + NL + "\t\t\t\tthrow new IndexOutOfBoundsException();" + NL + "\t\t}" + NL + "\t}" + NL;
	protected final String TEXT_1478 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1479 = NL + "\t@Override";
	protected final String TEXT_1480 = NL + "\tpublic String toString()" + NL + "\t{" + NL + "\t\tif (eIsProxy()) return super.toString();" + NL + "" + NL + "\t\tStringBuffer result = new StringBuffer(super.toString());";
	protected final String TEXT_1481 = NL + "\t\tresult.append(\" (";
	protected final String TEXT_1482 = ": \");";
	protected final String TEXT_1483 = NL + "\t\tresult.append(\", ";
	protected final String TEXT_1484 = ": \");";
	protected final String TEXT_1485 = NL + "\t\tif (eVirtualIsSet(";
	protected final String TEXT_1486 = ")) result.append(eVirtualGet(";
	protected final String TEXT_1487 = ")); else result.append(\"<unset>\");";
	protected final String TEXT_1488 = NL + "\t\tif (";
	protected final String TEXT_1489 = "(";
	protected final String TEXT_1490 = " & ";
	protected final String TEXT_1491 = "_ESETFLAG) != 0";
	protected final String TEXT_1492 = "ESet";
	protected final String TEXT_1493 = ") result.append((";
	protected final String TEXT_1494 = " & ";
	protected final String TEXT_1495 = "_EFLAG) != 0); else result.append(\"<unset>\");";
	protected final String TEXT_1496 = NL + "\t\tif (";
	protected final String TEXT_1497 = "(";
	protected final String TEXT_1498 = " & ";
	protected final String TEXT_1499 = "_ESETFLAG) != 0";
	protected final String TEXT_1500 = "ESet";
	protected final String TEXT_1501 = ") result.append(";
	protected final String TEXT_1502 = "_EFLAG_VALUES[(";
	protected final String TEXT_1503 = " & ";
	protected final String TEXT_1504 = "_EFLAG) >>> ";
	protected final String TEXT_1505 = "_EFLAG_OFFSET]); else result.append(\"<unset>\");";
	protected final String TEXT_1506 = NL + "\t\tif (";
	protected final String TEXT_1507 = "(";
	protected final String TEXT_1508 = " & ";
	protected final String TEXT_1509 = "_ESETFLAG) != 0";
	protected final String TEXT_1510 = "ESet";
	protected final String TEXT_1511 = ") result.append(";
	protected final String TEXT_1512 = "); else result.append(\"<unset>\");";
	protected final String TEXT_1513 = NL + "\t\tresult.append(eVirtualGet(";
	protected final String TEXT_1514 = ", ";
	protected final String TEXT_1515 = "));";
	protected final String TEXT_1516 = NL + "\t\tresult.append((";
	protected final String TEXT_1517 = " & ";
	protected final String TEXT_1518 = "_EFLAG) != 0);";
	protected final String TEXT_1519 = NL + "\t\tresult.append(";
	protected final String TEXT_1520 = "_EFLAG_VALUES[(";
	protected final String TEXT_1521 = " & ";
	protected final String TEXT_1522 = "_EFLAG) >>> ";
	protected final String TEXT_1523 = "_EFLAG_OFFSET]);";
	protected final String TEXT_1524 = NL + "\t\tresult.append(";
	protected final String TEXT_1525 = ");";
	protected final String TEXT_1526 = NL + "\t\tresult.append(')');" + NL + "\t\treturn result.toString();" + NL + "\t}" + NL;
	protected final String TEXT_1527 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tprotected int hash = -1;" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic int getHash()" + NL + "\t{" + NL + "\t\tif (hash == -1)" + NL + "\t\t{" + NL + "\t\t\t";
	protected final String TEXT_1528 = " theKey = getKey();" + NL + "\t\t\thash = (theKey == null ? 0 : theKey.hashCode());" + NL + "\t\t}" + NL + "\t\treturn hash;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic void setHash(int hash)" + NL + "\t{" + NL + "\t\tthis.hash = hash;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic ";
	protected final String TEXT_1529 = " getKey()" + NL + "\t{";
	protected final String TEXT_1530 = NL + "\t\treturn new ";
	protected final String TEXT_1531 = "(getTypedKey());";
	protected final String TEXT_1532 = NL + "\t\treturn getTypedKey();";
	protected final String TEXT_1533 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic void setKey(";
	protected final String TEXT_1534 = " key)" + NL + "\t{";
	protected final String TEXT_1535 = NL + "\t\tgetTypedKey().addAll(";
	protected final String TEXT_1536 = "(";
	protected final String TEXT_1537 = ")";
	protected final String TEXT_1538 = "key);";
	protected final String TEXT_1539 = NL + "\t\tsetTypedKey(key);";
	protected final String TEXT_1540 = NL + "\t\tsetTypedKey(((";
	protected final String TEXT_1541 = ")key).";
	protected final String TEXT_1542 = "());";
	protected final String TEXT_1543 = NL + "\t\tsetTypedKey((";
	protected final String TEXT_1544 = ")key);";
	protected final String TEXT_1545 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic ";
	protected final String TEXT_1546 = " getValue()" + NL + "\t{";
	protected final String TEXT_1547 = NL + "\t\treturn new ";
	protected final String TEXT_1548 = "(getTypedValue());";
	protected final String TEXT_1549 = NL + "\t\treturn getTypedValue();";
	protected final String TEXT_1550 = NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */" + NL + "\tpublic ";
	protected final String TEXT_1551 = " setValue(";
	protected final String TEXT_1552 = " value)" + NL + "\t{" + NL + "\t\t";
	protected final String TEXT_1553 = " oldValue = getValue();";
	protected final String TEXT_1554 = NL + "\t\tgetTypedValue().clear();" + NL + "\t\tgetTypedValue().addAll(";
	protected final String TEXT_1555 = "(";
	protected final String TEXT_1556 = ")";
	protected final String TEXT_1557 = "value);";
	protected final String TEXT_1558 = NL + "\t\tsetTypedValue(value);";
	protected final String TEXT_1559 = NL + "\t\tsetTypedValue(((";
	protected final String TEXT_1560 = ")value).";
	protected final String TEXT_1561 = "());";
	protected final String TEXT_1562 = NL + "\t\tsetTypedValue((";
	protected final String TEXT_1563 = ")value);";
	protected final String TEXT_1564 = NL + "\t\treturn oldValue;" + NL + "\t}" + NL + "" + NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";
	protected final String TEXT_1565 = NL + "\t@SuppressWarnings(\"unchecked\")";
	protected final String TEXT_1566 = NL + "\tpublic ";
	protected final String TEXT_1567 = " getEMap()" + NL + "\t{" + NL + "\t\t";
	protected final String TEXT_1568 = " container = eContainer();" + NL + "\t\treturn container == null ? null : (";
	protected final String TEXT_1569 = ")container.eGet(eContainmentFeature());" + NL + "\t}" + NL;
	protected final String TEXT_1570 = NL + "} //";
	protected final String TEXT_1571 = NL;
	protected final String TEXT_1572 = NL + "\t/**" + NL + "\t * <!-- begin-user-doc -->" + NL + "\t * <!-- end-user-doc -->" + NL + "\t * @generated" + NL + "\t */";

	public String generate(Object argument)
	{
		final StringBuffer stringBuffer = new StringBuffer();

		/**
		 * <copyright>
		 *
		 * Copyright (c) 2002-2007 IBM Corporation and others.
		 * All rights reserved.   This program and the accompanying materials
		 * are made available under the terms of the Eclipse Public License v1.0
		 * which accompanies this distribution, and is available at
		 * http://www.eclipse.org/legal/epl-v10.html
		 *
		 * Contributors:
		 *   IBM - Initial API and implementation
		 *
		 * </copyright>
		 */

		final GenClass genClass = (GenClass) ((Object[])argument)[0];
		final GenPackage genPackage = genClass.getGenPackage();
		final GenModel genModel=genPackage.getGenModel();
		final boolean isJDK50 = genModel.getComplianceLevel().getValue() >= GenJDKLevel.JDK50;
		final boolean isInterface = Boolean.TRUE.equals(((Object[])argument)[1]); 
		final boolean isImplementation = Boolean.TRUE.equals(((Object[])argument)[2]);
		//final Interface_Map interface_map = (Interface_Map)((Object[])argument)[3];
		//final Map<String,List> map_interface = interface_map.get_map();
		final Map<String,String> map_dependency = (Map<String,String>)((Object[])argument)[3];	
		final String publicStaticFinalFlag = isImplementation ? "public static final " : "";
		final String singleWildcard = isJDK50 ? "<?>" : "";
		final String negativeOffsetCorrection = genClass.hasOffsetCorrection() ? " - " + genClass.getOffsetCorrectionField(null) : "";
		final String positiveOffsetCorrection = genClass.hasOffsetCorrection() ? " + " + genClass.getOffsetCorrectionField(null) : "";
		final EList<EClassifier> elist = (EList<EClassifier>)((Object[])argument)[4];	
		final GenPackage genp = (GenPackage)((Object[])argument)[5];
		GenClass genJETClass = null;
		ImportManager importManager = new ImportManager(genPackage.getPackageName());
		genModel.setImportManager(importManager);
		genModel.markImportLocation(stringBuffer);
		String tempstring = null;


		/*if (!isImplementation) {	
			stringBuffer.append(TEXT_8);
			stringBuffer.append(genPackage.getInterfacePackageName());
			stringBuffer.append(TEXT_9 + NL + NL);
			stringBuffer.append("import " + genPackage.getEcorePackage().getName()+".*;" + NL + NL);
		} else {
			stringBuffer.append(TEXT_10);
			//stringBuffer.append(genPackage.getClassPackageName());
			stringBuffer.append(genPackage.getInterfacePackageName());
			stringBuffer.append(TEXT_11 + NL + NL);
			stringBuffer.append("import " + genPackage.getEcorePackage().getName()+".*;" + NL + NL);
		}
		stringBuffer.append(TEXT_12);*/

		if (isImplementation) {
			stringBuffer.append(TEXT_43);
			if (genClass.isAbstract()) {
				stringBuffer.append(TEXT_44);
			}
			stringBuffer.append(TEXT_45);
			stringBuffer.append(genClass.getName());
			stringBuffer.append(genClass.getTypeParameters().trim());
			//stringBuffer.append(genClass.getClassExtends());
			//stringBuffer.append(genClass.getClassImplements());
			if(map_dependency.containsKey(genClass.getName()))
			{
				//stringBuffer.append(" extends ");
				//stringBuffer.append(map_dependency.get(genClass.getName()));
			}
			//stringBuffer.append(" implements ");
			//stringBuffer.append(genClass.getImportedInterfaceName());
			//stringBuffer.append(genClass.getClassifierAccessorName());
			stringBuffer.append(TEXT_47);
			stringBuffer.append(NL + NL + "\t//Constructor");
			stringBuffer.append(NL + "\tpublic " +genClass.getName()+"(){" +NL);
			stringBuffer.append(NL + "\t}" + NL + NL);

			if (isImplementation && !genModel.isReflectiveDelegation()) {
				for (GenFeature genFeature : genClass.getDeclaredFieldGenFeatures()) {
					if (genFeature.isListType() || genFeature.isReferenceType()) {
						if (genClass.isField(genFeature)) {
							stringBuffer.append("\tpublic class ");
							//stringBuffer.append(genFeature.getSafeName()+" " + "implements ");
							stringBuffer.append("pt_"+genFeature.getSafeName());
							tempstring = genFeature.getImportedInternalType(genClass)+"_" ;
							//stringBuffer.append(genFeature.getImportedInternalType(genClass) + "{" + NL);
							stringBuffer.append("{" + NL+NL);
							stringBuffer.append("\t\t//Constructor" + NL +"\t\tpublic "+"pt_"+genFeature.getSafeName()+"{"+NL+NL+"\t\t}"+NL);
							Iterator<EClassifier> JETClassIter = elist.iterator();
							while (JETClassIter.hasNext()){
								genJETClass = (GenClass)genModel.findGenClassifier(
										genp.getEcorePackage().getEClassifier(JETClassIter.next().getName()));
								if(!genJETClass.isInterface())
								{
									//System.out.println(":::"+genJETClass.getName());
									if(genFeature.getImportedInternalType(genClass).equals(genJETClass.getName()))
									{
										for (GenOperation genOperation : (isImplementation ? genJETClass.getImplementedGenOperations() : genJETClass.getDeclaredGenOperations())) {
											if (isInterface) {
												stringBuffer.append(TEXT_1107);
												stringBuffer.append(TEXT_1108);
												if (genOperation.hasDocumentation() || genOperation.hasParameterDocumentation()) {
													stringBuffer.append(TEXT_1109);
													if (genOperation.hasDocumentation()) {
														stringBuffer.append(TEXT_1110);
														stringBuffer.append(genOperation.getDocumentation(genModel.getIndentation(stringBuffer)));
													}
													for (GenParameter genParameter : genOperation.getGenParameters()) {
														if (genParameter.hasDocumentation()) { String documentation = genParameter.getDocumentation("");
														if (documentation.contains("\n") || documentation.contains("\r")) {
															stringBuffer.append(TEXT_1111);
															stringBuffer.append(genParameter.getName());
															stringBuffer.append(TEXT_1112);
															stringBuffer.append(genParameter.getDocumentation(genModel.getIndentation(stringBuffer)));
														} else {
															stringBuffer.append(TEXT_1113);
															stringBuffer.append(genParameter.getName());
															stringBuffer.append(TEXT_1114);
															stringBuffer.append(genParameter.getDocumentation(genModel.getIndentation(stringBuffer)));
														}
														}
													}
													stringBuffer.append(TEXT_1115);
												}
												if (!genModel.isSuppressEMFModelTags()) { boolean first = true; for (StringTokenizer stringTokenizer = new StringTokenizer(genOperation.getModelInfo(), "\n\r"); stringTokenizer.hasMoreTokens(); ) { String modelInfo = stringTokenizer.nextToken(); if (first) { first = false;
												stringBuffer.append(TEXT_1116);
												stringBuffer.append(modelInfo);
												} else {
													stringBuffer.append(TEXT_1117);
													stringBuffer.append(modelInfo);
												}} if (first) {
													stringBuffer.append(TEXT_1118);
												}}
												stringBuffer.append(TEXT_1119);
												//Class/genOperation.javadoc.override.javajetinc
											} else {
												stringBuffer.append(TEXT_1120);
												if (isJDK50) { //Class/genOperation.annotations.insert.javajetinc
												}
											}
											if (!isImplementation) {
												stringBuffer.append(TEXT_1121);
												stringBuffer.append(genOperation.getTypeParameters(genClass));
												stringBuffer.append(genOperation.getImportedType(genClass));
												stringBuffer.append(TEXT_1122);
												stringBuffer.append(genOperation.getName());
												stringBuffer.append(TEXT_1123);
												stringBuffer.append(genOperation.getParameters(genClass));
												stringBuffer.append(TEXT_1124);
												stringBuffer.append(genOperation.getThrows(genClass));
												stringBuffer.append(TEXT_1125);
											} else {
												stringBuffer.append(TEXT_1126);
												/*(*********************/
												stringBuffer.append(genOperation.getTypeParameters(genClass));
												stringBuffer.append(genOperation.getImportedType(genClass));
												stringBuffer.append(TEXT_1127);
												stringBuffer.append("call_" + tempstring+genOperation.getName());
												stringBuffer.append(TEXT_1128);
												stringBuffer.append(genOperation.getParameters(genClass));
												stringBuffer.append(TEXT_1129);
												stringBuffer.append(genOperation.getThrows(genClass));
												stringBuffer.append(TEXT_1130);
												if (genOperation.hasBody()) {
													stringBuffer.append(TEXT_1131);
													stringBuffer.append(genOperation.getBody(genModel.getIndentation(stringBuffer)));
												} else if (genOperation.isInvariant()) {GenClass opClass = genOperation.getGenClass(); String diagnostics = genOperation.getGenParameters().get(0).getName(); String context = genOperation.getGenParameters().get(1).getName();
												stringBuffer.append(TEXT_1132);
												stringBuffer.append(diagnostics);
												stringBuffer.append(TEXT_1133);
												stringBuffer.append(diagnostics);
												stringBuffer.append(TEXT_1134);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.BasicDiagnostic"));
												stringBuffer.append(TEXT_1135);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.Diagnostic"));
												stringBuffer.append(TEXT_1136);
												stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
												stringBuffer.append(TEXT_1137);
												stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
												stringBuffer.append(TEXT_1138);
												stringBuffer.append(opClass.getOperationID(genOperation));
												stringBuffer.append(TEXT_1139);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.plugin.EcorePlugin"));
												stringBuffer.append(TEXT_1140);
												stringBuffer.append(genOperation.getName());
												stringBuffer.append(TEXT_1141);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.util.EObjectValidator"));
												stringBuffer.append(TEXT_1142);
												stringBuffer.append(context);
												stringBuffer.append(TEXT_1143);
												stringBuffer.append(genModel.getNonNLS());
												stringBuffer.append(genModel.getNonNLS(2));
												stringBuffer.append(TEXT_1144);
												} else {
													if(genOperation.getImportedType(genClass).equals("void")){
														stringBuffer.append(NL + "\t\t\t// TODO: implement this method" + NL + "\t\t\t// Ensure that you remove @generated or mark it @generated NOT");
													}else{
														stringBuffer.append(TEXT_1145);
													}
													//Class/implementedGenOperation.todo.override.javajetinc
												}
												stringBuffer.append(TEXT_1146);
												/*******************************************************/
												/*******************************************************/
												stringBuffer.append(TEXT_1126);
												/*(*********************/
												stringBuffer.append(genOperation.getTypeParameters(genClass));
												stringBuffer.append(genOperation.getImportedType(genClass));
												stringBuffer.append(TEXT_1127);
												stringBuffer.append("recv_" + tempstring+genOperation.getName());
												stringBuffer.append(TEXT_1128);
												stringBuffer.append(genOperation.getParameters(genClass));
												stringBuffer.append(TEXT_1129);
												stringBuffer.append(genOperation.getThrows(genClass));
												stringBuffer.append(TEXT_1130);
												if (genOperation.hasBody()) {
													stringBuffer.append(TEXT_1131);
													stringBuffer.append(genOperation.getBody(genModel.getIndentation(stringBuffer)));
												} else if (genOperation.isInvariant()) {GenClass opClass = genOperation.getGenClass(); String diagnostics = genOperation.getGenParameters().get(0).getName(); String context = genOperation.getGenParameters().get(1).getName();
												stringBuffer.append(TEXT_1132);
												stringBuffer.append(diagnostics);
												stringBuffer.append(TEXT_1133);
												stringBuffer.append(diagnostics);
												stringBuffer.append(TEXT_1134);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.BasicDiagnostic"));
												stringBuffer.append(TEXT_1135);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.Diagnostic"));
												stringBuffer.append(TEXT_1136);
												stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
												stringBuffer.append(TEXT_1137);
												stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
												stringBuffer.append(TEXT_1138);
												stringBuffer.append(opClass.getOperationID(genOperation));
												stringBuffer.append(TEXT_1139);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.plugin.EcorePlugin"));
												stringBuffer.append(TEXT_1140);
												stringBuffer.append(genOperation.getName());
												stringBuffer.append(TEXT_1141);
												stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.util.EObjectValidator"));
												stringBuffer.append(TEXT_1142);
												stringBuffer.append(context);
												stringBuffer.append(TEXT_1143);
												stringBuffer.append(genModel.getNonNLS());
												stringBuffer.append(genModel.getNonNLS(2));
												stringBuffer.append(TEXT_1144);
												} else {
													if(genOperation.getImportedType(genClass).equals("void")){
														stringBuffer.append(NL + "\t\t\t// TODO: implement this method" + NL + "\t\t\t// Ensure that you remove @generated or mark it @generated NOT");
													}else{
														stringBuffer.append(TEXT_1145);
													}
												}
												stringBuffer.append(TEXT_1146);
												/*******************************************************/
												/**************************************************/
											}
											//Class/implementedGenOperation.override.javajetinc
										}//for
									}

								}
							}

							stringBuffer.append(NL + "\t}" + NL + NL);
						}
					}
				}
			}
		} else {
			stringBuffer.append(TEXT_46);
			stringBuffer.append(genClass.getInterfaceName());
			stringBuffer.append(genClass.getTypeParameters().trim());
			//stringBuffer.append(genClass.getInterfaceExtends());
			stringBuffer.append(TEXT_47);

			/*if(map_interface.containsKey(genClass.getInterfaceName()))
			{
				List<String> temp = new ArrayList();
				temp = map_interface.get(genClass.getInterfaceName());

				for(int i = 0; i<temp.size(); i++)
				{
					stringBuffer.append(NL+ "\tpublic abstract ");
					stringBuffer.append(temp.get(i));
					stringBuffer.append(";"+ NL);
				}
			}*/

			for (GenOperation genOperation : (isImplementation ? genClass.getImplementedGenOperations() : genClass.getDeclaredGenOperations())) {
				if (isInterface) {
					stringBuffer.append(TEXT_1107);
					stringBuffer.append(TEXT_1108);
					if (genOperation.hasDocumentation() || genOperation.hasParameterDocumentation()) {
						stringBuffer.append(TEXT_1109);
						if (genOperation.hasDocumentation()) {
							stringBuffer.append(TEXT_1110);
							stringBuffer.append(genOperation.getDocumentation(genModel.getIndentation(stringBuffer)));
						}
						for (GenParameter genParameter : genOperation.getGenParameters()) {
							if (genParameter.hasDocumentation()) { String documentation = genParameter.getDocumentation("");
							if (documentation.contains("\n") || documentation.contains("\r")) {
								stringBuffer.append(TEXT_1111);
								stringBuffer.append(genParameter.getName());
								stringBuffer.append(TEXT_1112);
								stringBuffer.append(genParameter.getDocumentation(genModel.getIndentation(stringBuffer)));
							} else {
								stringBuffer.append(TEXT_1113);
								stringBuffer.append(genParameter.getName());
								stringBuffer.append(TEXT_1114);
								stringBuffer.append(genParameter.getDocumentation(genModel.getIndentation(stringBuffer)));
							}
							}
						}
						stringBuffer.append(TEXT_1115);
					}
					if (!genModel.isSuppressEMFModelTags()) { boolean first = true; for (StringTokenizer stringTokenizer = new StringTokenizer(genOperation.getModelInfo(), "\n\r"); stringTokenizer.hasMoreTokens(); ) { String modelInfo = stringTokenizer.nextToken(); if (first) { first = false;
					stringBuffer.append(TEXT_1116);
					stringBuffer.append(modelInfo);
					} else {
						stringBuffer.append(TEXT_1117);
						stringBuffer.append(modelInfo);
					}} if (first) {
						stringBuffer.append(TEXT_1118);
					}}
					stringBuffer.append(TEXT_1119);
					//Class/genOperation.javadoc.override.javajetinc
				} else {
					stringBuffer.append(TEXT_1572);
					if (isJDK50) { //Class/genOperation.annotations.insert.javajetinc
					}
				}
				if (!isImplementation) {
					stringBuffer.append(TEXT_1121);
					stringBuffer.append("public abstract ");
					stringBuffer.append(genOperation.getTypeParameters(genClass));
					stringBuffer.append(genOperation.getImportedType(genClass));
					stringBuffer.append(TEXT_1122);
					stringBuffer.append(genOperation.getName());
					stringBuffer.append(TEXT_1123);
					stringBuffer.append(genOperation.getParameters(genClass));
					stringBuffer.append(TEXT_1124);
					stringBuffer.append(genOperation.getThrows(genClass));
					stringBuffer.append(TEXT_1125);
					//System.out.println(genClass.getName()+ "::" + genClass.getEcoreClassifier().getInstanceClass().toString()+"," + genOperation.getName());
				} else {
					stringBuffer.append(TEXT_1126);
					stringBuffer.append(genOperation.getTypeParameters(genClass));
					stringBuffer.append(genOperation.getImportedType(genClass));
					stringBuffer.append(TEXT_1127);
					stringBuffer.append(genOperation.getName());
					stringBuffer.append(TEXT_1128);
					stringBuffer.append(genOperation.getParameters(genClass));
					stringBuffer.append(TEXT_1129);
					stringBuffer.append(genOperation.getThrows(genClass));
					stringBuffer.append(TEXT_1130);
					if (genOperation.hasBody()) {
						stringBuffer.append(TEXT_1131);
						stringBuffer.append(genOperation.getBody(genModel.getIndentation(stringBuffer)));
					} else if (genOperation.isInvariant()) {GenClass opClass = genOperation.getGenClass(); String diagnostics = genOperation.getGenParameters().get(0).getName(); String context = genOperation.getGenParameters().get(1).getName();
					stringBuffer.append(TEXT_1132);
					stringBuffer.append(diagnostics);
					stringBuffer.append(TEXT_1133);
					stringBuffer.append(diagnostics);
					stringBuffer.append(TEXT_1134);
					stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.BasicDiagnostic"));
					stringBuffer.append(TEXT_1135);
					stringBuffer.append(genModel.getImportedName("org.eclipse.emf.common.util.Diagnostic"));
					stringBuffer.append(TEXT_1136);
					stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
					stringBuffer.append(TEXT_1137);
					stringBuffer.append(opClass.getGenPackage().getImportedValidatorClassName());
					stringBuffer.append(TEXT_1138);
					stringBuffer.append(opClass.getOperationID(genOperation));
					stringBuffer.append(TEXT_1139);
					stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.plugin.EcorePlugin"));
					stringBuffer.append(TEXT_1140);
					stringBuffer.append(genOperation.getName());
					stringBuffer.append(TEXT_1141);
					stringBuffer.append(genModel.getImportedName("org.eclipse.emf.ecore.util.EObjectValidator"));
					stringBuffer.append(TEXT_1142);
					stringBuffer.append(context);
					stringBuffer.append(TEXT_1143);
					stringBuffer.append(genModel.getNonNLS());
					stringBuffer.append(genModel.getNonNLS(2));
					stringBuffer.append(TEXT_1144);
					} else {
						stringBuffer.append(TEXT_1145);
						//Class/implementedGenOperation.todo.override.javajetinc
					}
					stringBuffer.append(TEXT_1146);
				}
				//Class/implementedGenOperation.override.javajetinc
			}//for
		}

		stringBuffer.append("}" + NL + NL);
		return stringBuffer.toString();
	}
}
